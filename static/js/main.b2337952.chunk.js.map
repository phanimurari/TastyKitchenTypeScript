{"version":3,"sources":["common/components/InputElement/styledComponents.ts","common/components/InputElement/index.tsx","Authentication/login/components/LoginFormPage/styledComponents.ts","common/components/ButtonElement/styledComponents.ts","common/components/ButtonElement/index.tsx","Authentication/login/components/LoginFormPage/index.tsx","utils/StorageUtilis/index.ts","common/constants/routePathConstants/index.ts","utils/authUtilis/index.ts","Authentication/login/routes/LoginPageRoute/index.tsx","utils/navigationUtilis/index.ts","utils/ProtectedRoute/index.tsx","common/components/Header/styledComponents.tsx","common/components/Header/index.tsx","User/components/Carousel/styledComponents.ts","User/components/Carousel/index.tsx","common/components/Loader/styledComponent.ts","common/components/Loader/index.tsx","User/components/HomePageRestuarantHeader/styledComponent.ts","User/components/HomePageRestuarantHeader/index.tsx","User/components/RestuarntListComponent/styledComponents.js","User/components/RestuarntListComponent/index.tsx","User/components/Pagination/styledComponents.ts","User/components/Pagination/index.tsx","common/components/Footer/styledComponents.ts","common/components/Footer/index.tsx","User/routes/HomeRoute/index.tsx","User/components/FoodItem/styledComponents.ts","User/components/FoodItem/index.tsx","User/components/RestuarantDetailsHeader/styledComponents.ts","User/components/RestuarantDetailsHeader/index.tsx","User/components/RestuarantDetails/styledComponents.ts","User/components/RestuarantDetails/index.tsx","User/routes/RestuarantDetailsRoute/index.tsx","User/components/CartItem/styledComponents.ts","User/components/CartItem/index.tsx","User/components/CartList/styledComponents.ts","User/components/CartList/index.tsx","User/components/Cart/styledComponents.ts","User/components/Cart/index.tsx","User/utils/StorageUtilis/index.ts","User/routes/CartRoute/index.tsx","User/components/PlaceOrder/styledComponents.ts","User/components/PlaceOrder/index.tsx","User/routes/OrderPlacedRoute/index.tsx","User/components/Profile/styledComponents.ts","User/components/Profile/index.tsx","User/routes/ProfileRoute/index.tsx","common/routes/CommounRoutes.tsx","common/constants/ApiConstants/index.js","common/constants/envinornmentConstants/index.ts","utils/apiUtils/index.js","Authentication/login/services/authApiService.ts","Authentication/login/store/authStore.ts","User/services/carouselService/CarouselApiService.ts","User/services/restaurantDetailService/RestaurantDetailService.ts","User/services/restaurantsService/RestaurantsService.ts","User/store/carouselStore/carouselModel.ts","User/store/carouselStore/carouselStore.ts","User/store/homeStore/index.ts","User/store/restaurantDetailsStore/foodItemModel.ts","User/store/restaurantDetailsStore/restaurantDetailsStore.ts","User/store/restaurantsStore/restaurantModel.ts","User/store/restaurantsStore/restaurantsStore.ts","stores/index.ts","App.tsx","index.js"],"names":["InputStyledElement","styled","input","InputElement","props","inputValue","placeHolderText","typeOfInput","onChangeMethod","type","value","placeholder","onChange","colors","styleUnits","LoginFormContainer","div","FormContainer","LoginImageContainer","LoginLandingImage","img","LoginFormElemenet","form","LogoContainer","HeaderLogoImage","HeaderLogoTitle","h1","ShowPasswordContainer","InputLabelElement","label","StyledButtonElement","button","ButtonElement","buttonText","buttonType","onClickButtonMethod","onClick","loginPage","LoginFormPage","username","password","submitForm","onChangeUsername","onChangePassword","errorMsg","onShowPassword","showPassword","isLoading","onSubmit","src","id","htmlFor","ACCESS_TOKEN","setCookie","key","Cookie","set","expires","path","getAccessToken","get","clearUserSession","remove","LOGIN_PATH","USER_HOME_PATH","CART_PATH","RESTAURANT_DETAILS","ORDER_PLACED","PROFILE_PATH","isLoggedIn","undefined","LoginFormRoute","inject","action","bound","observer","getInjectedProps","getAuthStore","authStore","event","a","preventDefault","userDetails","userLogin","redirectPage","userLoginApiError","renderLoginFormContainer","showSubmitError","this","target","isAdmin","history","push","goToUserDashBoard","to","Component","observable","jwtToken","replace","ProtectedRoute","MobileHeader","LogoAndHambegerIconContainer","ShowOptionsButton","DesktopHeader","LogoLink","Link","HeaderButtonsContainer","ul","HeaderListElement","li","StyledLink","isLinkActive","headerLogoImageSrc","HeaderPageStrings","Header","state","isHamberburgerIconClicked","activePage","onToggleOptions","setState","onLogOut","renderLogoContainer","renderMenuOptions","pathname","location","isHomePathActive","isCartPathActive","isProfileCartPathActive","renderMobileHeader","fontSize","renderDesktopHeader","renderHeader","withRouter","StyledCarouselContainer","StyledListElement","StyledCarouselImage","CarouselComponent","carouselData","dots","fade","infinite","centerMode","autoplay","speed","slidesToShow","slidesToScroll","arrows","map","carouselElement","imageUrl","alt","LoaderContainer","LoaderComponent","color","height","width","PopularRestuarantsHeader","Heading","DescriptionAndSelectContainer","Description","p","SelectIconAndElementContainer","SelectElement","select","popularRestuarantHeaderStrings","sortByOptions","displayText","PopularRestuarantHeader","size","onChangeSelect","option","RestuarantList","RestuarantLink","RestuarantContainer","RestuarantImageContainer","RestuarantImage","RestuarantTextContainer","RestuarantHeading","RestuarantCuisineType","RestaurantRatingsAndReviewsContainer","RestaurantRatings","RestaurantNumberOfReviews","restaurantCardText","RestuarntListComponent","restuarantsData","restaurant","name","cuisine","userRating","rating","totalReviews","PaginationContainer","PaginationCount","PaginationComponentString","PaginationComponent","onDecreasePage","onIncreasePage","paginationPageCount","FooterContainer","FooterLogoContainer","LogoImage","LogoText","FooterDescription","FooterLogosIconsContainer","FooterIconItem","footerStrings","Footer","homeRouteTextStrings","HomeRoute","getCarouselStore","carouselStore","getHomeStore","homeStore","getRestuarantStore","restaurantsStore","getCarouselData","getPopularRestaurants","sortBy","offset","getRestuarants","renderLoadingView","Loader","renderCarouselView","Carousel","renderListOfRestuarnts","renderFailureView","renderResutarantsHeader","renderPagination","Pagination","renderHomePage","carouselApiStatus","API_FETCHING","API_SUCCESS","API_FAILED","renderResutarants","restaurantsApiStatus","onChangeSortBy","decrementPaginationCount","incrementPaginationCount","totalRestuarants","numberOfRestaurants","FoodItemContainer","FoodItemImageContainer","FoodItemTextContainer","FoodItemImage","FoodItemHeading","FoodItemIconContainer","FoodItemPara","FoodItemsButtonsContainer","ItemsQuantityText","foodItemStrings","FoodItem","onClickIncrementFoodItemQuantity","onClickDecrementFoodItemQuantity","item","cost","quantity","clickDecrementButton","clickIncrementButton","console","log","StyledRestuarantDetailsHeader","ResturantDetailsImageContainer","ResturantDetailsImage","ResturantDetailsTextContainer","ResturantName","ResturantHeaderPara","RestaurantHighLightsContainer","HightLightIconContainer","HighLightIconText","InnerContainer","restuarantDetailsHeaderStrings","RestuarantDetailsHeader","resturantData","restuarantName","restuarantCusine","restuarantLocation","restuarantRating","noOfReviews","costForTwo","itemsCount","RestuarantDetailsPage","ItemsContainer","FoodItemsList","RestuarantDetails","itemsData","RestuarantDetailsRoute","getRestaurantDetailsStore","restaurantDetailsStore","getRestuarantDetails","resturantId","split","restaurantFoodItemsList","decrementItemsDataQuantity","dataFromLocalStorage","localStorage","getItem","itemsDataFromLocalStorage","JSON","parse","findSelectedItemInItemsDataFromLocalStorage","find","decrementQuanityInItemsDataInLocalStorage","filteringOutTheItemsWIthQuantityZero","filter","updatedLocalStorageObject","stringify","setItem","incrementedItemsDataQuantity","incrementQuanityInItemsDataInLocalStorage","findSelectedItemInItemsDataFromState","updatedItemsData","updatedAddItemArray","renderRestuarantDetails","restaurantDetails","renderBasedOnApiStatus","restaurantDetailsApiStatus","CartItemContainer","CartItemImageContainer","CartImage","CartItemName","QuantityContainer","ItemQuantity","ItemPriceContainer","ItemPrice","FoodItemStrings","CartItem","onClickDecrementItemCount","onClickIncremenetItemCount","CartItemsTableHeader","CartItemTableText","CartItemsListContainer","CartItemsFooterContainer","CartItemFooterText","TotalCartPriceContainer","TotalPriceText","PriceAndIconContainer","cartListStrings","routePaths","CartList","cartItemsData","renderCartListFooter","addedCartItems","totalCost","reduce","totalPrice","price","length","renderCartList","CartContainer","Cart","getResturantSpecificData","CartRoute","foodType","getCartItemsDataFromLocalStorage","resturantSpecificData","PlaceOrderContainer","PlaceOrderHeading","PlaceOrderDescription","placeOrderStrings","PlaceOrder","OrderPlacedRoute","ProfileContainer","ProfileInsideContainer","ProfileWelcomeText","ProfileName","span","profileStrings","Profile","ProfileRoute","routes","exact","component","apiMethods","statusCodes","envVariables","process","config","Object","keys","forEach","variable","includes","envKey","networkCallWithApisauce","url","requestObject","response","accessToken","options","headers","Authorization","method","fetch","body","json","responseJson","AuthAPIService","api","create","baseURL","BASE_URL","getBaseURL","stringifiedLoginObject","AuthStore","authService","userLoginApiStatus","API_INITIAL","init","status","error","error_msg","loginObject","logIn","userLoginPromise","status_code","setUserLoginApiError","setUserLoginApiResponse","is_user","CarouselApiService","RestaurantDetailsService","RestaurantsService","CarouselModel","carouselDataObject","image_url","CarouselStore","carouselService","offers","carouselItem","userCarouselPromise","getCarousel","then","fetchResponse","setCarouselApiError","setCarouselApiResponse","HomeStore","FoodItemModel","food_type","RestaurantDetailsStore","restaurantDetailsService","restaurantsPromise","getRestaurantDetails","setRestaurantDetailsApiError","setRestaurantDetailsApiResponse","caseConvertedResturantDetailsData","reviews_count","cost_for_two","items_count","caseConvertedFoodItemsData","food_items","updateFetchedDataQuantity","fetchedItem","itemInLocalStorage","RestaurantModel","restuarantsDataObject","user_rating","total_reviews","RestaurantsStore","restaurantsService","limit","getRestaurants","setRestaurantsApiError","setRestaurantsApiResponse","restaurants","restuarantItem","getNumberOfRestaurants","total","App","stores","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2337952.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nexport const InputStyledElement = styled.input`\n  ${tw``}\n  padding: 10px;\n  margin: 10px;\n`;\n","import { InputStyledElement } from \"./styledComponents\";\n\ninterface InputElementPropsTypes {\n  inputValue?: string;\n  placeHolderText?: string;\n  typeOfInput: string;\n  id?: string;\n  onChangeMethod: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst InputElement = (props: InputElementPropsTypes) => {\n  const { inputValue, placeHolderText, typeOfInput, onChangeMethod } = props;\n\n  return (\n    <InputStyledElement\n      type={typeOfInput}\n      value={inputValue}\n      placeholder={placeHolderText}\n      onChange={onChangeMethod}\n    />\n  );\n};\n\nexport default InputElement;\n","import styled from \"styled-components\";\n\nimport tw from \"twin.macro\";\n\nconst colors = {\n  headerActiveLinkColor: \"#f7931e\",\n  headerUnActiveLinkColor: \"#334155\",\n  headerBackgroundColor: \"#f8fAfC\",\n  headerTitleTextColor: \"#f7931e\",\n};\n\nconst styleUnits = {\n  borderRadius: 15,\n};\n\nexport const LoginFormContainer = styled.div`\n  ${tw`flex h-screen`}\n  @media screen and (max-width : 768px) {\n    flex-direction: column;\n  }\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  ${tw`flex w-2/4 justify-center items-center drop-shadow`}\n  @media screen and (max-width : 768px) {\n    order: 2;\n    width: 100%;\n  }\n  @media screen and (min-width: 768px) {\n    order: 1;\n    width: 50%;\n  }\n`;\n\nexport const LoginImageContainer = styled.div`\n  ${tw`flex`}\n  @media screen and (max-width : 768px) {\n    order: 1;\n    height: 50%;\n  }\n  @media screen and (min-width: 768px) {\n    order: 2;\n    width: 50%;\n  }\n`;\n\nexport const LoginLandingImage = styled.img`\n  ${tw`w-full`}\n  object-fit: cover;\n  @media screen and (max-width: 768px) {\n    border-bottom-left-radius: ${styleUnits.borderRadius}px;\n    border-bottom-right-radius: ${styleUnits.borderRadius}px;\n  }\n`;\n\nexport const LoginFormElemenet = styled.form`\n  ${tw`flex flex-col items-center shadow-md p-6`}\n  @media screen and (max-width : 768px) {\n    width: 100%;\n  }\n`;\n\nexport const LogoContainer = styled.div`\n  ${tw`flex items-center justify-center`}\n`;\n\nexport const HeaderLogoImage = styled.img``;\n\nexport const HeaderLogoTitle = styled.h1`\n  ${tw`mx-2 italic`}\n  color: ${colors.headerTitleTextColor}\n`;\n\nexport const ShowPasswordContainer = styled.div`\n  ${tw`flex items-center w-8/12`}\n`;\n\nexport const InputLabelElement = styled.label`\n  ${tw``}\n  color: ${colors.headerUnActiveLinkColor}\n`;\n","import styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nconst colors = {\n  loginColor: \"#f7931e\",\n  logoutColor: \"#f7931e\",\n  buttonTextColor: \"#ffffff\",\n};\n\nexport const StyledButtonElement = styled.button`\n  ${tw`cursor-pointer`}align-item: width: 100px;\n  background-color: ${colors.loginColor};\n  border: none;\n  ${tw`p-2`};\n  ${tw`rounded-md`};\n  color: ${colors.buttonTextColor};\n  min-width: 30px;\n`;\n","import { StyledButtonElement } from \"./styledComponents\";\n\ninterface ButtonElementPropsTypes {\n  buttonText: any;\n  buttonType: any;\n  onClickButtonMethod?: () => void;\n}\n\nconst ButtonElement = (props: ButtonElementPropsTypes) => {\n  const { buttonText, buttonType, onClickButtonMethod } = props;\n\n  return (\n    <StyledButtonElement type={buttonType} onClick={onClickButtonMethod}>\n      {buttonText}\n    </StyledButtonElement>\n  );\n};\n\nexport default ButtonElement;\n","import { observer } from \"mobx-react\";\n\nimport InputElement from \"../../../../common/components/InputElement\";\nimport {\n  LoginFormContainer,\n  FormContainer,\n  LoginImageContainer,\n  LoginFormElemenet,\n  LoginLandingImage,\n  LogoContainer,\n  HeaderLogoImage,\n  HeaderLogoTitle,\n  ShowPasswordContainer,\n  InputLabelElement,\n} from \"./styledComponents\";\n\nimport ButtonElement from \"../../../../common/components/ButtonElement\";\n\nconst headerLogoImageSrc =\n  \"https://res.cloudinary.com/imphanimurari/image/upload/v1637500886/Mini%20Projects/Tasty%20Kitchen/Vector_1_kjlhlr.png\";\n\nconst LOGO_IMG_SRC_URL =\n  \"https://res.cloudinary.com/imphanimurari/image/upload/v1637500886/Mini%20Projects/Tasty%20Kitchen/Vector_1_kjlhlr.png\";\n\nconst url = \"https://apis.ccbp.in/login\";\n\nconst LANGING_IMAGE_URL =\n  \"https://res.cloudinary.com/imphanimurari/image/upload/v1637501465/Mini%20Projects/Tasty%20Kitchen/Rectangle_1456_fb4iv7.png\";\n\nconst loginPage = {\n  userNamePlaceHolder: \"Enter Username\",\n  passwordPlaceHolder: \"Enter Password\",\n  inputTypeText: \"text\",\n  inputTypePassword: \"password\",\n  buttonType: \"submit\",\n  buttonText: \"Login\",\n  logoText: \"Tasty Kitchen\",\n  showPasswordInputType: \"checkbox\",\n  inputLableText: \"Show Password\",\n  showPasswordInputTypeId: \"showPassword\",\n};\n\ninterface loginFormPropsTypes {\n  username: string;\n  password: string;\n  submitForm: (event: React.ChangeEvent<HTMLFormElement>) => void;\n  onChangeUsername: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangePassword: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onShowPassword: () => void;\n  showPassword: boolean;\n  errorMsg: Error | string;\n  isLoading: boolean;\n}\n\nconst LoginFormPage = (props: loginFormPropsTypes) => {\n  const {\n    username,\n    password,\n    submitForm,\n    onChangeUsername,\n    onChangePassword,\n    errorMsg,\n    onShowPassword,\n    showPassword,\n    isLoading,\n  } = props;\n\n  const renderErrorMessage = () => errorMsg;\n\n  return (\n    <LoginFormContainer>\n      <FormContainer>\n        <LoginFormElemenet onSubmit={submitForm}>\n          <LogoContainer>\n            <HeaderLogoImage src={headerLogoImageSrc} />\n            <HeaderLogoTitle>{loginPage.logoText}</HeaderLogoTitle>\n          </LogoContainer>\n          <InputElement\n            inputValue={username}\n            onChangeMethod={onChangeUsername}\n            placeHolderText={loginPage.userNamePlaceHolder}\n            typeOfInput={loginPage.inputTypeText}\n          />\n\n          <InputElement\n            inputValue={password}\n            onChangeMethod={onChangePassword}\n            placeHolderText={loginPage.passwordPlaceHolder}\n            typeOfInput={\n              showPassword\n                ? loginPage.inputTypeText\n                : loginPage.inputTypePassword\n            }\n          />\n          <ShowPasswordContainer>\n            <InputElement\n              onChangeMethod={onShowPassword}\n              typeOfInput={loginPage.showPasswordInputType}\n              id={loginPage.showPasswordInputTypeId}\n            />\n            <InputLabelElement htmlFor={loginPage.showPasswordInputTypeId}>\n              {loginPage.inputLableText}\n            </InputLabelElement>\n          </ShowPasswordContainer>\n          <ButtonElement\n            buttonText={loginPage.buttonText}\n            buttonType={loginPage.buttonType}\n          />\n          {renderErrorMessage()}\n        </LoginFormElemenet>\n      </FormContainer>\n      <LoginImageContainer>\n        <LoginLandingImage src={LANGING_IMAGE_URL} />\n      </LoginImageContainer>\n    </LoginFormContainer>\n  );\n};\n\nexport default LoginFormPage;\n","import Cookie from \"js-cookie\";\n\nexport const ACCESS_TOKEN = \"jwt_token\";\n\nexport function getCookie(key: string) {\n  return Cookie.get(key);\n}\n\nexport function setCookie(key: string, value: string) {\n  Cookie.set(key, value, {\n    expires: 30,\n    path: \"/\",\n  });\n}\n\nexport function getAccessToken() {\n  return getCookie(ACCESS_TOKEN);\n}\n\nexport function setAccessToken(accessToken: string) {\n  setCookie(ACCESS_TOKEN, accessToken);\n}\n\nexport function clearUserSession() {\n  Cookie.remove(ACCESS_TOKEN, { path: \"/\" });\n}\n","export const LOGIN_PATH = \"/tasty-kitchen/login/\";\n\nexport const USER_HOME_PATH = \"/tasty-kitchen/\";\n\nexport const ADIM_HOME_PATH = \"/tasty-kitchen/admin/\";\n\nexport const CART_PATH = \"/tasty-kitchen/cart\";\n\nexport const RESTAURANT_DETAILS = \"/tasty-kitchen/restaurants-list/\";\n\nexport const ORDER_PLACED = \"/tasty-kitchen/order-placed\";\n\nexport const PROFILE_PATH = \"/tasty-kitchen/my-profile\";\n","import { getAccessToken } from \"../StorageUtilis\";\n\nexport const isLoggedIn = () => {\n  if (getAccessToken() !== undefined) {\n    return true;\n  } else {\n    return false;\n  }\n};\n","import { Component } from \"react\";\nimport { action, observable } from \"mobx\";\nimport { inject, observer } from \"mobx-react\";\nimport { Redirect, RouteComponentProps } from \"react-router-dom\";\nimport LoginFormPage from \"../../components/LoginFormPage\";\nimport { getAccessToken, setCookie } from \"../../../../utils/StorageUtilis\";\nimport { USER_HOME_PATH } from \"../../../../common/constants/routePathConstants\";\n\nimport AuthStore from \"../../store/authStore\";\nimport { isLoggedIn } from \"../../../../utils/authUtilis\";\nimport {\n  goToAdminDashBoard,\n  goToUserDashBoard,\n} from \"../../../../utils/navigationUtilis\";\n\nconst errorMessage = \"Incorrect username or password\";\n\ninterface InjectedProps extends RouteComponentProps {\n  authStore: AuthStore;\n  onChangeEventType: React.ChangeEvent<HTMLInputElement>;\n}\n\n@inject(\"authStore\")\n@observer\nclass LoginFormRoute extends Component<RouteComponentProps> {\n  @observable username: string;\n  @observable password: string;\n  @observable showSubmitError: boolean;\n  @observable errorMsg: string | Error;\n  @observable showPassword: boolean;\n  @observable isLoading: boolean;\n\n  constructor(props: any) {\n    super(props);\n    this.username = \"\";\n    this.password = \"\";\n    this.showSubmitError = false;\n    this.errorMsg = \"\";\n    this.showPassword = false;\n    this.isLoading = false;\n  }\n\n  getInjectedProps = (): InjectedProps => this.props as InjectedProps;\n\n  getAuthStore = () => {\n    return this.getInjectedProps().authStore;\n  };\n\n  @action.bound onChangeUsername(event: React.ChangeEvent<HTMLInputElement>) {\n    this.username = event.target.value;\n  }\n\n  @action.bound onChangePassword(event: React.ChangeEvent<HTMLInputElement>) {\n    this.password = event.target.value;\n  }\n\n  @action.bound onShowPassword = () => {\n    const { showPassword } = this;\n    this.showPassword = !showPassword;\n  };\n\n  @action.bound onSubmitSuccess = (jwtToken: string) => {\n    const { history } = this.props;\n\n    setCookie(\"jwt_token\", jwtToken);\n\n    history.replace(USER_HOME_PATH);\n  };\n\n  submitForm = async (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { username, password } = this;\n    if (username !== \"\" && password !== \"\") {\n      this.isLoading = true;\n      const userDetails = { username, password };\n      await this.getAuthStore().userLogin(userDetails);\n      if (getAccessToken() !== undefined) {\n        this.redirectPage();\n      } else if (this.getAuthStore().userLoginApiError !== \"\") {\n        this.errorMsg = this.getAuthStore().userLoginApiError;\n      }\n    } else {\n      this.errorMsg = errorMessage;\n    }\n  };\n\n  @action.bound redirectPage() {\n    const { isAdmin } = this.getAuthStore();\n    if (isAdmin && isLoggedIn()) {\n      goToAdminDashBoard(this.getInjectedProps().history);\n    } else if (!isAdmin && isLoggedIn()) {\n      goToUserDashBoard(this.getInjectedProps().history);\n    }\n  }\n\n  renderLoginFormContainer = () => {\n    const { username, password, errorMsg, showPassword, isLoading } = this;\n\n    return (\n      <LoginFormPage\n        username={username}\n        password={password}\n        submitForm={this.submitForm}\n        onChangeUsername={this.onChangeUsername}\n        onChangePassword={this.onChangePassword}\n        onShowPassword={this.onShowPassword}\n        errorMsg={errorMsg}\n        showPassword={showPassword}\n        isLoading={isLoading}\n      />\n    );\n  };\n\n  render() {\n    return isLoggedIn() ? (\n      <Redirect to={USER_HOME_PATH} />\n    ) : (\n      this.renderLoginFormContainer()\n    );\n  }\n}\n\nexport default LoginFormRoute;\n","import {\n  ADIM_HOME_PATH,\n  USER_HOME_PATH,\n} from \"../../common/constants/routePathConstants\";\n\nexport const goToUserDashBoard = (history: any) => {\n  history.push(USER_HOME_PATH);\n};\n\nexport const goToAdminDashBoard = (history: any) => {\n  history.push(ADIM_HOME_PATH);\n};\n","import { Redirect, Route } from \"react-router-dom\";\nimport { RouteProps } from \"react-router\";\nimport { isLoggedIn } from \"../authUtilis\";\nimport { LOGIN_PATH } from \"../../common/constants/routePathConstants\";\n\nconst ProtectedRoute = (props: RouteProps) => {\n  if (isLoggedIn()) {\n    return <Route {...props} />;\n  }\n  return <Redirect to={LOGIN_PATH} />;\n};\n\nexport default ProtectedRoute;\n","import styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nimport { Link } from \"react-router-dom\";\n\nconst colors = {\n  headerActiveLinkColor: \"#f7931e\",\n  headerUnActiveLinkColor: \"#334155\",\n  headerBackgroundColor: \"#f8fAfC\",\n  headerTitleTextColor: \"#f7931e\",\n};\n\nexport const MobileHeader = styled.div`\n  display: none;\n  ${tw`p-2`};\n  background-color: ${colors.headerBackgroundColor};\n  @media screen and (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const LogoAndHambegerIconContainer = styled.div`\n  ${tw`flex items-center justify-between w-full pl-2 pr-2`}\n`;\n\nexport const ShowOptionsButton = styled.button`\n  ${tw``};\n  border: none;\n`;\n\nexport const DesktopHeader = styled.div`\n  display: none;\n  ${tw`pl-6`};\n  ${tw`pr-6`};\n  background-color: ${colors.headerBackgroundColor};\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nexport const LogoLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const LogoContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const HeaderLogoImage = styled.img``;\n\nexport const HeaderLogoTitle = styled.h1`\n  font-family: DM Sans;\n  font-style: italic;\n  font-weight: bold;\n  font-size: 24px;\n  color: ${colors.headerTitleTextColor};\n  margin-left: 10px;\n`;\n\nexport const HeaderButtonsContainer = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const HeaderListElement = styled.li`\n  list-style-type: none;\n  ${tw`mr-3 ml-3`};\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: ${(props: { isLinkActive: boolean }) =>\n    props.isLinkActive\n      ? colors.headerActiveLinkColor\n      : colors.headerUnActiveLinkColor};\n  font-family: DM Sans;\n  font-weight: bold;\n  margin-right: 15px;\n`;\n","import { Component } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { IoMdClose } from \"react-icons/io\";\n\nimport ButtonElement from \"../ButtonElement\";\nimport {\n  DesktopHeader,\n  HeaderButtonsContainer,\n  HeaderListElement,\n  HeaderLogoImage,\n  HeaderLogoTitle,\n  LogoAndHambegerIconContainer,\n  LogoContainer,\n  LogoLink,\n  MobileHeader,\n  ShowOptionsButton,\n  StyledLink,\n} from \"./styledComponents\";\nimport {\n  CART_PATH,\n  PROFILE_PATH,\n  LOGIN_PATH,\n  USER_HOME_PATH,\n} from \"../../constants/routePathConstants\";\nimport { clearUserSession, getAccessToken } from \"../../../utils/StorageUtilis\";\n\nconst headerLogoImageSrc =\n  \"https://res.cloudinary.com/imphanimurari/image/upload/v1637500886/Mini%20Projects/Tasty%20Kitchen/Vector_1_kjlhlr.png\";\n\nconst HeaderPageStrings = {\n  headerLogoText: \"Tasty Kitchen\",\n  homeText: \"Home\",\n  cartText: \"Cart\",\n  logoutButtonText: \"Logout\",\n  typeOfButton: \"button\",\n  profileText: \"Profile\",\n};\n\ninterface HeaderStateTypes {\n  isHamberburgerIconClicked: boolean;\n  activePage: string;\n}\n\nclass Header extends Component<RouteComponentProps, HeaderStateTypes> {\n  state = {\n    isHamberburgerIconClicked: false,\n    activePage: HeaderPageStrings.homeText,\n  };\n\n  onToggleOptions = () => {\n    const { isHamberburgerIconClicked } = this.state;\n    this.setState({ isHamberburgerIconClicked: !isHamberburgerIconClicked });\n  };\n\n  onLogOut = () => {\n    const { history } = this.props;\n    const token = getAccessToken();\n\n    if (token !== undefined) {\n      clearUserSession();\n    }\n\n    history.replace(LOGIN_PATH);\n  };\n\n  renderLogoContainer = () => (\n    <LogoLink to={LOGIN_PATH}>\n      <LogoContainer>\n        <HeaderLogoImage src={headerLogoImageSrc} />\n        <HeaderLogoTitle>{HeaderPageStrings.headerLogoText}</HeaderLogoTitle>\n      </LogoContainer>\n    </LogoLink>\n  );\n\n  renderMenuOptions = () => {\n    const { history } = this.props;\n    const { location } = history;\n    const { pathname } = location;\n    const isHomePathActive: boolean = pathname === USER_HOME_PATH;\n    const isCartPathActive: boolean = pathname === CART_PATH;\n    const isProfileCartPathActive: boolean = pathname === PROFILE_PATH;\n\n    return (\n      <HeaderButtonsContainer>\n        <HeaderListElement>\n          <StyledLink to={USER_HOME_PATH} isLinkActive={isHomePathActive}>\n            {HeaderPageStrings.homeText}\n          </StyledLink>\n        </HeaderListElement>\n        <HeaderListElement>\n          <StyledLink to={CART_PATH} isLinkActive={isCartPathActive}>\n            {HeaderPageStrings.cartText}\n          </StyledLink>\n        </HeaderListElement>\n        <HeaderListElement>\n          <StyledLink to={PROFILE_PATH} isLinkActive={isProfileCartPathActive}>\n            {HeaderPageStrings.profileText}\n          </StyledLink>\n        </HeaderListElement>\n        <HeaderListElement>\n          <ButtonElement\n            onClickButtonMethod={this.onLogOut}\n            buttonText={HeaderPageStrings.logoutButtonText}\n            buttonType={HeaderPageStrings.typeOfButton}\n          />\n        </HeaderListElement>\n      </HeaderButtonsContainer>\n    );\n  };\n\n  renderMobileHeader = () => {\n    const { isHamberburgerIconClicked } = this.state;\n    return (\n      <MobileHeader>\n        <LogoAndHambegerIconContainer>\n          {this.renderLogoContainer()}\n          <ShowOptionsButton onClick={this.onToggleOptions}>\n            {isHamberburgerIconClicked ? (\n              <IoMdClose fontSize={25} />\n            ) : (\n              <GiHamburgerMenu fontSize={25} />\n            )}\n          </ShowOptionsButton>\n        </LogoAndHambegerIconContainer>\n        {isHamberburgerIconClicked ? this.renderMenuOptions() : null}\n      </MobileHeader>\n    );\n  };\n\n  renderDesktopHeader = () => (\n    <DesktopHeader>\n      {this.renderLogoContainer()}\n      {this.renderMenuOptions()}\n    </DesktopHeader>\n  );\n\n  renderHeader = () => (\n    <>\n      {this.renderMobileHeader()}\n      {this.renderDesktopHeader()}\n    </>\n  );\n\n  render() {\n    return this.renderHeader();\n  }\n}\n\nexport default withRouter(Header);\n","import styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nexport const StyledCarouselContainer = styled.div`\n  @media screen and (min-width: 768px) {\n    ${tw`py-2`}\n  }\n`;\n\nexport const StyledListElement = styled.li`\n  @media screen and (max-width: 768px) {\n    ${tw`w-full h-1/2`}\n  }\n\n  @media screen and (min-width: 768px) {\n    ${tw`w-11/12`}\n  }\n`;\n\nexport const StyledCarouselImage = styled.img`\n  ${tw`w-full`}\n`;\n","import Slider from \"react-slick\";\n\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport { carouselDataObjectType } from \"../../store/types\";\nimport {\n  StyledCarouselContainer,\n  StyledCarouselImage,\n  StyledListElement,\n} from \"./styledComponents\";\n\ninterface carouselDatPropsTypes {\n  carouselData: Array<carouselDataObjectType>;\n}\n\nconst CarouselComponent = (props: carouselDatPropsTypes) => {\n  const { carouselData } = props;\n\n  const renderCarouselSlider = () =>\n    carouselData.map((carouselElement) => (\n      <StyledListElement key={carouselElement.id}>\n        <StyledCarouselImage src={carouselElement.imageUrl} alt=\"offer\" />\n      </StyledListElement>\n    ));\n\n  const settings = {\n    dots: true,\n    fade: true,\n    infinite: true,\n    centerMode: true,\n    autoplay: true,\n    speed: 1000,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: true,\n  };\n\n  return (\n    <StyledCarouselContainer>\n      <Slider {...settings}>{renderCarouselSlider()}</Slider>\n    </StyledCarouselContainer>\n  );\n};\n\nexport default CarouselComponent;\n","import styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nexport const LoaderContainer = styled.div`\n  ${tw`flex justify-center items-center `}\n`;\n","import Loader from \"react-loader-spinner\";\nimport { LoaderContainer } from \"./styledComponent\";\n\nconst colors = {\n  loaderColor: \"#f7931e\",\n};\n\nconst LoaderComponent = () => (\n  <LoaderContainer>\n    <Loader\n      color={colors.loaderColor}\n      height={80}\n      type=\"ThreeDots\"\n      width={80}\n    />\n  </LoaderContainer>\n);\n\nexport default LoaderComponent;\n","import styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nexport const PopularRestuarantsHeader = styled.div`\n  ${tw`w-11/12 mx-auto flex flex-col justify-center`}\n`;\n\nexport const Heading = styled.h1``;\n\nexport const DescriptionAndSelectContainer = styled.div`\n  ${tw`flex justify-between`}\n`;\n\nexport const Description = styled.p``;\n\nexport const SelectIconAndElementContainer = styled.div`\n  ${tw`flex justify-center items-center`}\n`;\n\nexport const SelectElement = styled.select`\n  ${tw`p-2 mx-1 border-none outline-none text-base`}\n`;\n","import { VscListSelection } from \"react-icons/vsc\";\n\nimport {\n  Description,\n  DescriptionAndSelectContainer,\n  Heading,\n  PopularRestuarantsHeader,\n  SelectElement,\n  SelectIconAndElementContainer,\n} from \"./styledComponent\";\n\nconst popularRestuarantHeaderStrings = {\n  heading: \"Popular Restaurants\",\n  description:\n    \"Select your Favourite Restaurants and Favourite Dish and make your Day Happy!\",\n  selectIconSize: 25,\n};\n\nconst sortByOptions = [\n  {\n    id: 0,\n    displayText: \"Highest\",\n    value: \"Highest\",\n  },\n  {\n    id: 2,\n    displayText: \"Lowest\",\n    value: \"Lowest\",\n  },\n];\n\ninterface PopularRestuarantHeaderPropsTypes {\n  onChangeSelect: (value: string) => void;\n}\n\nconst PopularRestuarantHeader = (props: PopularRestuarantHeaderPropsTypes) => {\n  const renderOption = () => {\n    const options = sortByOptions.map((option) => (\n      <option key={option.id} value={option.value}>\n        {option.displayText}\n      </option>\n    ));\n    return options;\n  };\n\n  const onChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { onChangeSelect } = props;\n    const { value } = event.target;\n    onChangeSelect(value);\n  };\n\n  return (\n    <PopularRestuarantsHeader>\n      <Heading>{popularRestuarantHeaderStrings.heading}</Heading>\n      <DescriptionAndSelectContainer>\n        <Description>{popularRestuarantHeaderStrings.description}</Description>\n        <SelectIconAndElementContainer>\n          <VscListSelection\n            size={popularRestuarantHeaderStrings.selectIconSize}\n          />\n          <SelectElement onChange={onChangeSelect}>\n            {renderOption()}\n          </SelectElement>\n        </SelectIconAndElementContainer>\n      </DescriptionAndSelectContainer>\n    </PopularRestuarantsHeader>\n  );\n};\n\nexport default PopularRestuarantHeader;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nimport tw from \"twin.macro\";\n\nconst colors = {\n  resturantCardItemColor: `#000000`,\n};\n\nexport const RestuarantList = styled.ul`\n  ${tw`flex flex-wrap list-none`}\n`;\n\nexport const RestuarantLink = styled(Link)`\n  ${tw`no-underline`}\n`;\n\nexport const RestuarantContainer = styled.li`\n  ${tw`p-2 flex items-center justify-center drop-shadow-2xl`}\n  color: ${colors.resturantCardItemColor}\n`;\n\nexport const RestuarantImageContainer = styled.div`\n  ${tw`flex items-center`}\n`;\n\nexport const RestuarantImage = styled.img`\n  ${tw`w-64 h-48 rounded-lg`}\n`;\n\nexport const RestuarantTextContainer = styled.div`\n  ${tw`px-6`}\n`;\n\nexport const RestuarantHeading = styled.h1`\n  ${tw`text-xl`}\n`;\n\nexport const RestuarantCuisineType = styled.p``;\n\nexport const RestaurantRatingsAndReviewsContainer = styled.div`\n  ${tw`flex justify-start items-center`}\n`;\n\nexport const RestaurantRatings = styled.div``;\n\nexport const RestaurantNumberOfReviews = styled.p``;\n","import { FaStar } from \"react-icons/fa\";\nimport { RESTAURANT_DETAILS } from \"../../../common/constants/routePathConstants\";\nimport { restuarantsDataObjectCaseConvertedType } from \"../../store/types\";\n\nimport {\n  RestaurantNumberOfReviews,\n  RestaurantRatings,\n  RestaurantRatingsAndReviewsContainer,\n  RestuarantContainer,\n  RestuarantCuisineType,\n  RestuarantHeading,\n  RestuarantImage,\n  RestuarantImageContainer,\n  RestuarantLink,\n  RestuarantList,\n  RestuarantTextContainer,\n} from \"./styledComponents\";\n\ninterface userRatingTypes {\n  rating_text: string;\n  rating_color: string;\n  total_reviews: number;\n  rating: number;\n  totalReviews: number;\n}\n\ninterface RestuarntListComponentTypes {\n  restuarantsData: Array<restuarantsDataObjectCaseConvertedType>;\n}\n\nconst restaurantCardText = {\n  ratings: \"ratings\",\n};\n\nconst restuarantPath = \"/restaurants-list/\";\n\nconst RestuarntListComponent = (props: RestuarntListComponentTypes) => {\n  const { restuarantsData } = props;\n\n  return (\n    <RestuarantList>\n      {restuarantsData.map(\n        (restaurant: restuarantsDataObjectCaseConvertedType) => {\n          const { id, name, cuisine, userRating, imageUrl } = restaurant;\n\n          return (\n            <RestuarantLink key={id} to={`${RESTAURANT_DETAILS}${id}`}>\n              <RestuarantContainer>\n                <RestuarantImageContainer>\n                  <RestuarantImage src={imageUrl} />\n                </RestuarantImageContainer>\n                <RestuarantTextContainer>\n                  <RestuarantHeading>{name}</RestuarantHeading>\n                  <RestuarantCuisineType>{cuisine}</RestuarantCuisineType>\n                  <RestaurantRatingsAndReviewsContainer>\n                    <RestaurantRatings>\n                      <FaStar />\n                      {userRating.rating}\n                    </RestaurantRatings>\n                    <RestaurantNumberOfReviews>\n                      ({userRating.totalReviews} {restaurantCardText.ratings})\n                    </RestaurantNumberOfReviews>\n                  </RestaurantRatingsAndReviewsContainer>\n                </RestuarantTextContainer>\n              </RestuarantContainer>\n            </RestuarantLink>\n          );\n        }\n      )}\n    </RestuarantList>\n  );\n};\n\nexport default RestuarntListComponent;\n","import styled from \"styled-components\";\n\nimport tw from \"twin.macro\";\n\nexport const PaginationContainer = styled.div`\n  ${tw`flex justify-center m-2`}\n`;\n\nexport const DecreaseButton = styled.button``;\n\nexport const IncreaseButton = styled.button``;\n\nexport const PaginationCount = styled.p`\n  ${tw`m-2 font-bold`}\n`;\n","import ButtonElement from \"../../../common/components/ButtonElement\";\nimport {\n  DecreaseButton,\n  IncreaseButton,\n  PaginationContainer,\n  PaginationCount,\n} from \"./styledComponents\";\n\nconst PaginationComponentString = {\n  decreaseButtonText: \"-\",\n  increaseButtonText: \"+\",\n  buttonType: \"button\",\n};\n\ninterface PaginationComponentProps {\n  onDecreasePage: () => void;\n  onIncreasePage: () => void;\n  paginationPageCount: number;\n}\n\nconst PaginationComponent = (props: PaginationComponentProps) => {\n  const { onDecreasePage, onIncreasePage, paginationPageCount } = props;\n\n  return (\n    <PaginationContainer>\n      <ButtonElement\n        onClickButtonMethod={onDecreasePage}\n        buttonText={PaginationComponentString.decreaseButtonText}\n        buttonType={PaginationComponentString.buttonType}\n      />\n      <PaginationCount>{paginationPageCount}</PaginationCount>\n      <ButtonElement\n        onClickButtonMethod={onIncreasePage}\n        buttonText={PaginationComponentString.increaseButtonText}\n        buttonType={PaginationComponentString.buttonType}\n      />\n    </PaginationContainer>\n  );\n};\n\nexport default PaginationComponent;\n","import styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nconst colors = {\n  footerBackgroundColor: \"#0f172a\",\n  textColor: \"#ffffff\",\n};\n\nexport const FooterContainer = styled.div`\n  ${tw`h-64 flex flex-col justify-center items-center`}\n  color: ${colors.textColor};\n  background-color: ${colors.footerBackgroundColor};\n`;\n\nexport const FooterLogoContainer = styled.div`\n  ${tw`flex items-center`}\n`;\n\nexport const LogoImage = styled.img``;\n\nexport const LogoText = styled.h1`\n  ${tw`mx-2`}\n`;\n\nexport const FooterDescription = styled.p``;\n\nexport const FooterLogosIconsContainer = styled.ul`\n  ${tw`flex list-none`}\n`;\n\nexport const FooterIconItem = styled.li`\n  ${tw`mx-2`}\n`;\n","import {\n  FaPinterestSquare,\n  FaFacebookSquare,\n  FaTwitterSquare,\n  FaInstagramSquare,\n} from \"react-icons/fa\";\nimport {\n  FooterContainer,\n  FooterDescription,\n  FooterIconItem,\n  FooterLogoContainer,\n  FooterLogosIconsContainer,\n  LogoImage,\n  LogoText,\n} from \"./styledComponents\";\n\nconst footerStrings = {\n  iconSize: 40,\n  logoText: \"Tasty Kitchen\",\n  footerDescription: \"The only thing we are serious about is food\",\n};\n\nconst colors = {\n  white: \"#ffffff\",\n};\n\nconst LogoURL =\n  \"https://res.cloudinary.com/imphanimurari/image/upload/v1646500554/Mini%20Projects/Tasty%20Kitchen/Vector_1_b2f8kt.png\";\n\nconst Footer = () => (\n  <FooterContainer>\n    <FooterLogoContainer>\n      <LogoImage src={LogoURL} />\n      <LogoText>{footerStrings.logoText}</LogoText>\n    </FooterLogoContainer>\n    <FooterDescription>{footerStrings.footerDescription}</FooterDescription>\n    <FooterLogosIconsContainer>\n      <FooterIconItem>\n        <FaPinterestSquare size={footerStrings.iconSize} />\n      </FooterIconItem>\n      <FooterIconItem>\n        <FaFacebookSquare size={footerStrings.iconSize} />\n      </FooterIconItem>\n      <FooterIconItem>\n        <FaInstagramSquare size={footerStrings.iconSize} />\n      </FooterIconItem>\n      <FooterIconItem>\n        <FaTwitterSquare size={footerStrings.iconSize} />\n      </FooterIconItem>\n    </FooterLogosIconsContainer>\n  </FooterContainer>\n);\n\nexport default Footer;\n","import { Component } from \"react\";\nimport Header from \"../../../common/components/Header\";\nimport CarouselComponent from \"../../components/Carousel\";\nimport LoaderComponent from \"../../../common/components/Loader\";\nimport PopularRestuarantHeader from \"../../components/HomePageRestuarantHeader\";\nimport RestuarntListComponent from \"../../components/RestuarntListComponent\";\nimport PaginationComponent from \"../../components/Pagination\";\nimport Footer from \"../../../common/components/Footer\";\nimport { inject, observer } from \"mobx-react\";\nimport { CarouselStore } from \"../../store/carouselStore/carouselStore\";\nimport HomeStore from \"../../store/homeStore\";\nimport { action } from \"mobx\";\nimport { API_FAILED, API_FETCHING, API_SUCCESS } from \"@ib/api-constants\";\nimport RestaurantsStore from \"../../store/restaurantsStore/restaurantsStore\";\n\ninterface InjectedProps {\n  carouselStore: CarouselStore;\n  homeStore: HomeStore;\n  restaurantsStore: RestaurantsStore;\n}\n\nconst homeRouteTextStrings = {\n  sortByHigh: \"Highest\",\n  sortByLow: \"Low\",\n  limit: 9,\n  paginationPageCount: 1,\n  totalRestuarants: 0,\n};\n\n@inject(\"carouselStore\", \"homeStore\", \"restaurantsStore\")\n@observer\nclass HomeRoute extends Component {\n  componentDidMount() {\n    this.getCarouselData();\n    this.getPopularRestaurants();\n  }\n\n  getInjectedProps = (): InjectedProps => this.props as InjectedProps;\n\n  getCarouselStore = () => {\n    return this.getInjectedProps().carouselStore;\n  };\n\n  getHomeStore = () => {\n    return this.getInjectedProps().homeStore;\n  };\n\n  getRestuarantStore = () => {\n    return this.getInjectedProps().restaurantsStore;\n  };\n\n  getCarouselData = async () => {\n    const carouselStore = this.getCarouselStore();\n    await carouselStore.getCarouselData();\n  };\n\n  getPopularRestaurants = async () => {\n    const { sortBy, paginationPageCount } = this.getHomeStore();\n    const offset = (paginationPageCount - 1) * homeRouteTextStrings.limit;\n    await this.getRestuarantStore().getRestuarants(\n      offset,\n      homeRouteTextStrings.limit,\n      sortBy\n    );\n  };\n\n  @action.bound\n  onChangeSelect = async (value: string) => {\n    const { onChangeSortBy } = this.getHomeStore();\n    await onChangeSortBy(value);\n    this.getPopularRestaurants();\n  };\n\n  @action.bound\n  onDecreasePage = async () => {\n    const { decrementPaginationCount } = this.getHomeStore();\n    await decrementPaginationCount();\n    this.getPopularRestaurants();\n  };\n\n  @action.bound\n  onIncreasePage = async () => {\n    const { incrementPaginationCount } = this.getHomeStore();\n    const totalRestuarants = this.getRestuarantStore().numberOfRestaurants;\n    await incrementPaginationCount(totalRestuarants);\n    this.getPopularRestaurants();\n  };\n\n  renderLoadingView = () => <LoaderComponent />;\n\n  renderCarouselView = () => {\n    const { carouselData } = this.getCarouselStore();\n    return <CarouselComponent carouselData={carouselData} />;\n  };\n\n  renderListOfRestuarnts = () => {\n    const { restuarantsData } = this.getRestuarantStore();\n    return <RestuarntListComponent restuarantsData={restuarantsData} />;\n  };\n\n  renderFailureView = () => <h1>Failure view</h1>;\n\n  renderResutarantsHeader = () => (\n    <PopularRestuarantHeader onChangeSelect={this.onChangeSelect} />\n  );\n\n  renderPagination = () => {\n    const { paginationPageCount } = this.getHomeStore();\n\n    return (\n      <PaginationComponent\n        paginationPageCount={paginationPageCount}\n        onDecreasePage={this.onDecreasePage}\n        onIncreasePage={this.onIncreasePage}\n      />\n    );\n  };\n\n  renderHomePage = () => {\n    const { carouselApiStatus } = this.getCarouselStore();\n\n    switch (carouselApiStatus) {\n      case API_FETCHING:\n        return this.renderLoadingView();\n      case API_SUCCESS:\n        return this.renderCarouselView();\n      case API_FAILED:\n        return this.renderFailureView();\n      default:\n        return null;\n    }\n  };\n\n  renderResutarants = () => {\n    const { restaurantsApiStatus } = this.getRestuarantStore();\n\n    switch (restaurantsApiStatus) {\n      case API_FETCHING:\n        return this.renderLoadingView();\n      case API_SUCCESS:\n        return this.renderListOfRestuarnts();\n      case API_FAILED:\n        return this.renderFailureView();\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Header />\n        {this.renderHomePage()}\n        {this.renderResutarantsHeader()}\n        {this.renderResutarants()}\n        {this.renderPagination()}\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default HomeRoute;\n","import styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nexport const FoodItemContainer = styled.li`\n  ${tw`w-96 m-4 flex`}\n`;\n\nexport const FoodItemImageContainer = styled.div`\n  ${tw`flex items-center`}\n`;\nexport const FoodItemTextContainer = styled.div`\n  ${tw`px-6`}\n`;\n\nexport const FoodItemImage = styled.img`\n  ${tw`w-64 h-48 rounded-lg`}\n`;\n\nexport const FoodItemHeading = styled.h1`\n  ${tw`text-xl`}\n`;\n\nexport const FoodItemIconContainer = styled.div`\n  ${tw`flex items-center`}\n`;\n\nexport const FoodItemPara = styled.p``;\n\nexport const FoodItemsButtonsContainer = styled.div`\n  ${tw`flex items-center`}\n`;\n\nexport const ItemsQuantityText = styled.p`\n  ${tw`mx-2`}\n`;\n","import { BiRupee } from \"react-icons/bi\";\n\nimport { AiFillStar } from \"react-icons/ai\";\nimport {\n  FoodItemContainer,\n  FoodItemHeading,\n  FoodItemIconContainer,\n  FoodItemImage,\n  FoodItemImageContainer,\n  FoodItemPara,\n  FoodItemsButtonsContainer,\n  FoodItemTextContainer,\n  ItemsQuantityText,\n} from \"./styledComponents\";\nimport ButtonElement from \"../../../common/components/ButtonElement\";\n\ninterface restuarantItemsDataTypes {\n  id: string;\n  name: string;\n  cost: number;\n  food_type?: string;\n  foodType?: string;\n  image_url?: string;\n  imageUrl?: string;\n  rating: number;\n  quantity: number;\n}\n\ninterface FoodItemProps {\n  item: restuarantItemsDataTypes;\n  onClickIncrementFoodItemQuantity: (id: string) => void;\n  onClickDecrementFoodItemQuantity: (id: string) => void;\n}\n\nconst foodItemStrings = {\n  foodItemAltText: \"Food Item\",\n  iconSize: 25,\n  iconColor: \"#ffcc00\",\n  endingZeros: \".00\",\n  incrementButtonText: `+`,\n  buttonType: \"button\",\n  decrementButtonText: `-`,\n  addButtonText: \"Add\",\n};\n\nconst FoodItem = (props: FoodItemProps) => {\n  const {\n    onClickIncrementFoodItemQuantity,\n    onClickDecrementFoodItemQuantity,\n    item,\n  } = props;\n\n  const { id, imageUrl, name, cost, quantity } = item;\n\n  const clickDecrementButton = () => {\n    onClickDecrementFoodItemQuantity(id);\n  };\n\n  const clickIncrementButton = () => {\n    onClickIncrementFoodItemQuantity(id);\n  };\n\n  const renderCounterOrButton = () => {\n    console.log(quantity);\n\n    return quantity > 0 ? (\n      <FoodItemsButtonsContainer>\n        <ButtonElement\n          buttonText={foodItemStrings.decrementButtonText}\n          buttonType={foodItemStrings.buttonType}\n          onClickButtonMethod={clickDecrementButton}\n        />\n        <ItemsQuantityText>{quantity}</ItemsQuantityText>\n        <ButtonElement\n          buttonText={foodItemStrings.incrementButtonText}\n          buttonType={foodItemStrings.buttonType}\n          onClickButtonMethod={clickIncrementButton}\n        />\n      </FoodItemsButtonsContainer>\n    ) : (\n      <ButtonElement\n        buttonText={foodItemStrings.addButtonText}\n        buttonType={foodItemStrings.buttonType}\n        onClickButtonMethod={clickIncrementButton}\n      />\n    );\n  };\n\n  return (\n    <FoodItemContainer>\n      <FoodItemImageContainer>\n        <FoodItemImage src={imageUrl} />\n      </FoodItemImageContainer>\n      <FoodItemTextContainer>\n        <FoodItemHeading>{name}</FoodItemHeading>\n        <FoodItemIconContainer>\n          <BiRupee size={foodItemStrings.iconSize} />\n          <FoodItemPara>\n            {cost}\n            {foodItemStrings.endingZeros}\n          </FoodItemPara>\n        </FoodItemIconContainer>\n        <FoodItemIconContainer>\n          <AiFillStar\n            size={foodItemStrings.iconSize}\n            color={foodItemStrings.iconColor}\n          />\n          <FoodItemPara>{cost}</FoodItemPara>\n        </FoodItemIconContainer>\n        {renderCounterOrButton()}\n      </FoodItemTextContainer>\n    </FoodItemContainer>\n  );\n};\n\nexport default FoodItem;\n","import styled from \"styled-components\";\n\nimport tw from \"twin.macro\";\n\nconst colors = {\n  headerBackgroundColor: \"#3b3b3b\",\n  headerTextColor: \"#ffffff\",\n};\n\nexport const StyledRestuarantDetailsHeader = styled.div`\n  ${tw`h-1/3 flex justify-center items-center`}\n  background-color: ${colors.headerBackgroundColor};\n  color: ${colors.headerTextColor};\n`;\n\nexport const ResturantDetailsImageContainer = styled.div`\n  ${tw`w-2/5 flex justify-end`}\n`;\n\nexport const ResturantDetailsImage = styled.img`\n  ${tw`w-3/5 rounded-lg`}\n`;\n\nexport const ResturantDetailsTextContainer = styled.div`\n  ${tw` w-3/4 px-4`}\n`;\n\nexport const ResturantName = styled.h1``;\n\nexport const ResturantHeaderPara = styled.p``;\n\nexport const RestaurantHighLightsContainer = styled.div`\n  ${tw`flex`}\n`;\n\nexport const HightLightIconContainer = styled.div`\n  ${tw` mx-2`}\n`;\n\nexport const HighLightIconText = styled.p`\n  ${tw`mx-1`}\n`;\n\nexport const InnerContainer = styled.div`\n  ${tw`flex items-center `}\n`;\n","import { AiFillStar } from \"react-icons/ai\";\n\nimport { BiRupee } from \"react-icons/bi\";\n\nimport {\n  HighLightIconText,\n  HightLightIconContainer,\n  InnerContainer,\n  RestaurantHighLightsContainer,\n  ResturantDetailsImage,\n  ResturantDetailsImageContainer,\n  ResturantDetailsTextContainer,\n  ResturantHeaderPara,\n  ResturantName,\n  StyledRestuarantDetailsHeader,\n} from \"./styledComponents\";\n\ninterface resturantDataTypes {\n  id: string;\n  imageUrl: string;\n  restuarantName: string;\n  restuarantCusine: string;\n  restuarantLocation: string;\n  restuarantRating: number;\n  noOfReviews: number;\n  costForTwo: number;\n  itemsCount: number;\n}\n\ninterface RestuarantDetailsHeaderTypes {\n  resturantData: resturantDataTypes;\n}\n\nconst restuarantDetailsHeaderStrings = {\n  iconSize: 25,\n  noOfRatings: `+ Ratings`,\n  costForTwo: \"Cost for two\",\n};\n\nconst RestuarantDetailsHeader = (props: RestuarantDetailsHeaderTypes) => {\n  const { resturantData } = props;\n\n  const {\n    id,\n    imageUrl,\n    restuarantName,\n    restuarantCusine,\n    restuarantLocation,\n    restuarantRating,\n    noOfReviews,\n    itemsCount,\n    costForTwo,\n  } = resturantData;\n  return (\n    <StyledRestuarantDetailsHeader>\n      <ResturantDetailsImageContainer>\n        <ResturantDetailsImage src={imageUrl} />\n      </ResturantDetailsImageContainer>\n      <ResturantDetailsTextContainer>\n        <ResturantName>{restuarantName}</ResturantName>\n        <ResturantHeaderPara>{restuarantCusine}</ResturantHeaderPara>\n        <ResturantHeaderPara>{restuarantLocation}</ResturantHeaderPara>\n        <RestaurantHighLightsContainer>\n          <HightLightIconContainer>\n            <InnerContainer>\n              <AiFillStar size={restuarantDetailsHeaderStrings.iconSize} />\n              <HighLightIconText>{restuarantRating}</HighLightIconText>\n            </InnerContainer>\n            <InnerContainer>\n              <HighLightIconText>\n                {noOfReviews}\n                {restuarantDetailsHeaderStrings.noOfRatings}\n              </HighLightIconText>\n            </InnerContainer>\n          </HightLightIconContainer>\n          <HightLightIconContainer>\n            <InnerContainer>\n              <BiRupee size={restuarantDetailsHeaderStrings.iconSize} />\n              <HighLightIconText>{costForTwo}</HighLightIconText>\n            </InnerContainer>\n            <InnerContainer>\n              <HighLightIconText>\n                {restuarantDetailsHeaderStrings.costForTwo}\n              </HighLightIconText>\n            </InnerContainer>\n          </HightLightIconContainer>\n        </RestaurantHighLightsContainer>\n      </ResturantDetailsTextContainer>\n    </StyledRestuarantDetailsHeader>\n  );\n};\nexport default RestuarantDetailsHeader;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nimport tw from \"twin.macro\";\n\nexport const RestuarantList = styled.ul`\n  ${tw`flex flex-wrap list-none`}\n`;\n\nexport const RestuarantDetailsPage = styled.div`\n  ${tw`h-screen`}\n`;\n\nexport const ItemsContainer = styled.div``;\n\nexport const FoodItemsList = styled.ul`\n  ${tw`list-none flex flex-wrap justify-center`}\n`;\n","import Footer from \"../../../common/components/Footer\";\nimport Header from \"../../../common/components/Header\";\nimport FoodItem from \"../FoodItem\";\nimport RestuarantDetailsHeader from \"../RestuarantDetailsHeader\";\nimport {\n  FoodItemsList,\n  ItemsContainer,\n  RestuarantDetailsPage,\n} from \"./styledComponents\";\n\ninterface restuarantDataTypes {\n  id: string;\n  imageUrl: string;\n  restuarantName: string;\n  restuarantCusine: string;\n  restuarantLocation: string;\n  restuarantRating: number;\n  noOfReviews: number;\n  costForTwo: number;\n  itemsCount: number;\n}\n\ninterface restuarantItemsDataTypes {\n  id: string;\n  name: string;\n  cost: number;\n  food_type?: string;\n  foodType?: string;\n  image_url?: string;\n  imageUrl?: string;\n  rating: number;\n  quantity: number;\n}\n\ninterface RestuarantDetailsPropsTypes {\n  resturantData: restuarantDataTypes;\n  itemsData: Array<restuarantItemsDataTypes>;\n  onClickIncrementFoodItemQuantity: (id: string) => void;\n  onClickDecrementFoodItemQuantity: (id: string) => void;\n}\n\nconst RestuarantDetails = (props: RestuarantDetailsPropsTypes) => {\n  const {\n    resturantData,\n    itemsData,\n    onClickIncrementFoodItemQuantity,\n    onClickDecrementFoodItemQuantity,\n  } = props;\n  const renderListOfItems = () =>\n    itemsData.map((item: restuarantItemsDataTypes) => (\n      <FoodItem\n        item={item}\n        key={item.id}\n        onClickIncrementFoodItemQuantity={onClickIncrementFoodItemQuantity}\n        onClickDecrementFoodItemQuantity={onClickDecrementFoodItemQuantity}\n      />\n    ));\n\n  return (\n    <RestuarantDetailsPage>\n      <Header />\n      <RestuarantDetailsHeader resturantData={resturantData} />\n      <ItemsContainer>\n        <FoodItemsList>{renderListOfItems()}</FoodItemsList>\n      </ItemsContainer>\n      <Footer />\n    </RestuarantDetailsPage>\n  );\n};\n\nexport default RestuarantDetails;\n","import { Component } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport LoaderComponent from \"../../../common/components/Loader\";\nimport RestuarantDetails from \"../../components/RestuarantDetails\";\nimport { inject, observer } from \"mobx-react\";\nimport RestaurantDetailsStore from \"../../store/restaurantDetailsStore/restaurantDetailsStore\";\nimport { API_FAILED, API_FETCHING, API_SUCCESS } from \"@ib/api-constants\";\nimport { foodItemObjectTypes } from \"../../store/types\";\n\ninterface InjectedProps extends RouteComponentProps {\n  restaurantDetailsStore: RestaurantDetailsStore;\n}\n\n@inject(\"restaurantDetailsStore\")\n@observer\nclass RestuarantDetailsRoute extends Component<InjectedProps> {\n  componentDidMount() {\n    this.getRestuarantDetails();\n  }\n\n  getInjectedProps = (): InjectedProps => this.props as InjectedProps;\n\n\n  getRestaurantDetailsStore = () => this.getInjectedProps().restaurantDetailsStore;\n\n\n  getRestuarantDetails = async () => {\n    const { history } = this.props;\n    const { location } = history;\n    const { pathname } = location;\n    const resturantId = pathname.split(\"/\")[3];\n    await this.getRestaurantDetailsStore().getRestuarantDetails(resturantId)\n  };\n\n  onClickDecrementFoodItemQuantity = async (id: string) => {\n    const { restaurantFoodItemsList } = this.getRestaurantDetailsStore()\n\n    const decrementItemsDataQuantity = restaurantFoodItemsList.map((item) => {\n      if (item.id === id && item.quantity > 0) {\n        item.quantity -= 1;\n      }\n      return item;\n    });\n\n    const dataFromLocalStorage = localStorage.getItem(\"resturantSpecificData\");\n\n    if (dataFromLocalStorage !== null) {\n      const itemsDataFromLocalStorage = JSON.parse(dataFromLocalStorage)\n        .itemsData;\n      const findSelectedItemInItemsDataFromLocalStorage = itemsDataFromLocalStorage.find(\n        (item: foodItemObjectTypes) => item.id === id\n      );\n\n      if (\n        findSelectedItemInItemsDataFromLocalStorage !== undefined &&\n        findSelectedItemInItemsDataFromLocalStorage.quantity > 0\n      ) {\n        const decrementQuanityInItemsDataInLocalStorage = itemsDataFromLocalStorage.map(\n          (item: foodItemObjectTypes) => {\n            if (item.id === id && item.quantity > 0) {\n              item.quantity -= 1;\n            }\n            return item;\n          }\n        );\n\n        const filteringOutTheItemsWIthQuantityZero = decrementQuanityInItemsDataInLocalStorage.filter(\n          (item: foodItemObjectTypes) => item.quantity > 0\n        );\n\n        const updatedLocalStorageObject = JSON.stringify({\n          itemsData: filteringOutTheItemsWIthQuantityZero,\n        });\n        localStorage.setItem(\n          \"resturantSpecificData\",\n          updatedLocalStorageObject\n        );\n      }\n    }\n\n    this.setState({ itemsData: decrementItemsDataQuantity });\n  };\n\n  onClickIncrementFoodItemQuantity = (id: string) => {\n    const { restaurantFoodItemsList } = this.getRestaurantDetailsStore()\n\n\n    const incrementedItemsDataQuantity = restaurantFoodItemsList.map((item) => {\n      if (item.id === id) {\n        item.quantity += 1;\n      }\n      return item;\n    });\n\n    const dataFromLocalStorage = localStorage.getItem(\"resturantSpecificData\");\n\n    if (dataFromLocalStorage !== null) {\n      const itemsDataFromLocalStorage = JSON.parse(dataFromLocalStorage)\n        .itemsData;\n      const findSelectedItemInItemsDataFromLocalStorage = itemsDataFromLocalStorage.find(\n        (item: foodItemObjectTypes) => item.id === id\n      );\n\n      if (findSelectedItemInItemsDataFromLocalStorage !== undefined) {\n        const incrementQuanityInItemsDataInLocalStorage = itemsDataFromLocalStorage.map(\n          (item: foodItemObjectTypes) => {\n            if (item.id === id) {\n              item.quantity += 1;\n            }\n            return item;\n          }\n        );\n        const updatedLocalStorageObject = JSON.stringify({\n          itemsData: incrementQuanityInItemsDataInLocalStorage,\n        });\n        localStorage.setItem(\n          \"resturantSpecificData\",\n          updatedLocalStorageObject\n        );\n      } else {\n        const findSelectedItemInItemsDataFromState = restaurantFoodItemsList.find(\n          (item: foodItemObjectTypes) => item.id === id\n        );\n        const updatedItemsData = [\n          ...itemsDataFromLocalStorage,\n          findSelectedItemInItemsDataFromState,\n        ];\n        const updatedLocalStorageObject = JSON.stringify({\n          itemsData: updatedItemsData,\n        });\n        localStorage.setItem(\n          \"resturantSpecificData\",\n          updatedLocalStorageObject\n        );\n      }\n    } else {\n      const addedItem = restaurantFoodItemsList.find(\n        (item: foodItemObjectTypes) => item.id === id\n      );\n      const updatedAddItemArray = [addedItem];\n      const updatedLocalStorageObject = JSON.stringify({\n        itemsData: updatedAddItemArray,\n      });\n      localStorage.setItem(\"resturantSpecificData\", updatedLocalStorageObject);\n    }\n\n    this.setState({ itemsData: incrementedItemsDataQuantity });\n  };\n\n  renderLoadingView = () => <LoaderComponent />;\n\n  renderFailureView = () => <h1>Failure view</h1>;\n\n  renderRestuarantDetails = () => {\n    const { restaurantDetails, restaurantFoodItemsList } = this.getRestaurantDetailsStore()\n    return (\n      <RestuarantDetails\n        resturantData={restaurantDetails}\n        itemsData={restaurantFoodItemsList}\n        onClickIncrementFoodItemQuantity={this.onClickIncrementFoodItemQuantity}\n        onClickDecrementFoodItemQuantity={this.onClickDecrementFoodItemQuantity}\n      />\n    );\n  };\n\n  renderBasedOnApiStatus = () => {\n\n    const { restaurantDetailsApiStatus } = this.getRestaurantDetailsStore()\n\n    switch (restaurantDetailsApiStatus) {\n      case API_FETCHING:\n        return this.renderLoadingView();\n      case API_SUCCESS:\n        return this.renderRestuarantDetails();\n      case API_FAILED:\n        return this.renderFailureView();\n      default:\n        return null;\n    }\n\n\n  };\n\n  render() {\n    return this.renderBasedOnApiStatus();\n  }\n}\n\nexport default withRouter(RestuarantDetailsRoute);\n","import styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nexport const CartItemContainer = styled.li`\n  ${tw`flex m-2`}\n`;\n\nexport const CartItemImageContainer = styled.div`\n  ${tw`flex w-1/3 items-center`}\n`;\n\nexport const CartImage = styled.img`\n  ${tw`w-40 h-36 rounded-xl`}\n`;\n\nexport const CartItemName = styled.p`\n  ${tw`text-lg font-medium mx-2`}\n`;\n\nexport const QuantityContainer = styled.div`\n  ${tw`flex items-center w-1/3`}\n`;\n\nexport const ItemQuantity = styled.p`\n  ${tw`mx-2`}\n`;\n\nexport const ItemPriceContainer = styled.div`\n  ${tw`flex items-center mx-2`}\n`;\n\nexport const ItemPrice = styled.p``;\n","import { BiRupee } from \"react-icons/bi\";\n\nimport ButtonElement from \"../../../common/components/ButtonElement\";\nimport {\n  CartImage,\n  CartItemContainer,\n  CartItemImageContainer,\n  CartItemName,\n  ItemPrice,\n  ItemPriceContainer,\n  ItemQuantity,\n  QuantityContainer,\n} from \"./styledComponents\";\n\ninterface restuarantItemsDataTypes {\n  id: string;\n  name: string;\n  cost: number;\n  food_type?: string;\n  foodType?: string;\n  image_url?: string;\n  imageUrl?: string;\n  rating: number;\n  quantity: number;\n}\n\ninterface cartItemProps {\n  item: restuarantItemsDataTypes;\n  onClickDecrementItemCount: (id: string) => void;\n  onClickIncremenetItemCount: (id: string) => void;\n}\n\nconst FoodItemStrings = {\n  incrementButtonText: `+`,\n  decrementButtonText: `-`,\n  buttonType: `button`,\n};\n\nconst CartItem = (props: cartItemProps) => {\n  const { imageUrl, name, quantity, cost, id } = props.item;\n\n  const { onClickDecrementItemCount, onClickIncremenetItemCount } = props;\n\n  const onClickIncrement = () => {\n    onClickIncremenetItemCount(id);\n  };\n\n  const onClickDecrement = () => {\n    onClickDecrementItemCount(id);\n  };\n\n  return (\n    <CartItemContainer>\n      <CartItemImageContainer>\n        <CartImage src={imageUrl} />\n        <CartItemName>{name}</CartItemName>\n      </CartItemImageContainer>\n      <QuantityContainer>\n        <ButtonElement\n          buttonText={FoodItemStrings.decrementButtonText}\n          buttonType={FoodItemStrings.buttonType}\n          onClickButtonMethod={onClickDecrement}\n        />\n        <ItemQuantity>{quantity}</ItemQuantity>\n        <ButtonElement\n          buttonText={FoodItemStrings.incrementButtonText}\n          buttonType={FoodItemStrings.buttonType}\n          onClickButtonMethod={onClickIncrement}\n        />\n      </QuantityContainer>\n      <ItemPriceContainer>\n        <BiRupee />\n        <ItemPrice>{quantity * cost}</ItemPrice>\n      </ItemPriceContainer>\n    </CartItemContainer>\n  );\n};\n\nexport default CartItem;\n","import styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nexport const CartItemsTableHeader = styled.li`\n  ${tw`flex`}\n`;\n\nexport const CartItemTableText = styled.p`\n  ${tw`w-1/3`}\n`;\n\nexport const CartItemsListContainer = styled.div`\n  ${tw` flex flex-col px-2 rounded-lg list-none h-4/6`}\n`;\n\nexport const CartItemsFooterContainer = styled.li`\n  ${tw`flex w-4/5 justify-between`}\n`;\n\nexport const CartItemFooterText = styled.p``;\n\nexport const TotalCartPriceContainer = styled.div`\n  ${tw``}\n`;\n\nexport const TotalPriceText = styled.p``;\n\nexport const PriceAndIconContainer = styled.div`\n  ${tw`flex items-center`}\n`;\n","import { Link } from \"react-router-dom\";\n\nimport { FaRupeeSign } from \"react-icons/fa\";\n\nimport ButtonElement from \"../../../common/components/ButtonElement\";\n\nimport CartItem from \"../CartItem\";\n\nimport {\n  CartItemFooterText,\n  CartItemsFooterContainer,\n  CartItemsListContainer,\n  CartItemsTableHeader,\n  CartItemTableText,\n  PriceAndIconContainer,\n  TotalCartPriceContainer,\n  TotalPriceText,\n} from \"./styledComponents\";\n\ninterface restuarantItemsDataTypes {\n  id: string;\n  name: string;\n  cost: number;\n  food_type?: string;\n  foodType?: string;\n  image_url?: string;\n  imageUrl?: string;\n  rating: number;\n  quantity: number;\n}\n\ninterface cartItemsDataTypes {\n  cartItemsData: Array<restuarantItemsDataTypes>;\n  onClickDecrementItemCount: (id: string) => void;\n  onClickIncremenetItemCount: (id: string) => void;\n}\n\nconst cartListStrings = {\n  item: \"Item\",\n  quantity: \"Quantity\",\n  price: \"Price\",\n  footerText: \"Order Total:\",\n  placeOrderButtonText: \"Place Order\",\n  buttonType: \"button\",\n};\n\nconst routePaths = {\n  placeOrderRoutePath: \"/order-placed\",\n};\n\nconst CartList = (props: cartItemsDataTypes) => {\n  const {\n    cartItemsData,\n    onClickDecrementItemCount,\n    onClickIncremenetItemCount,\n  } = props;\n  const filterCartItems = () =>\n    cartItemsData.filter((item) => item.quantity > 0);\n\n  const rendCartItemsHeader = () => (\n    <CartItemsTableHeader>\n      <CartItemTableText>{cartListStrings.item}</CartItemTableText>\n      <CartItemTableText>{cartListStrings.quantity}</CartItemTableText>\n      <CartItemTableText>{cartListStrings.quantity}</CartItemTableText>\n    </CartItemsTableHeader>\n  );\n\n  const renderCartListFooter = (\n    addedCartItems: Array<restuarantItemsDataTypes>\n  ) => {\n    const totalCost = addedCartItems\n      .map((item) => item.cost * item.quantity)\n      .reduce((totalPrice, price) => totalPrice + price, 0);\n\n    return (\n      <CartItemsFooterContainer>\n        <CartItemFooterText>{cartListStrings.footerText}</CartItemFooterText>\n        <TotalCartPriceContainer>\n          <PriceAndIconContainer>\n            <FaRupeeSign />\n            <TotalPriceText>{totalCost}</TotalPriceText>\n          </PriceAndIconContainer>\n          <Link to={routePaths.placeOrderRoutePath}>\n            <ButtonElement\n              buttonText={cartListStrings.placeOrderButtonText}\n              buttonType={cartListStrings.buttonType}\n            ></ButtonElement>\n          </Link>\n        </TotalCartPriceContainer>\n      </CartItemsFooterContainer>\n    );\n  };\n\n  const renderCartList = () => {\n    const addedCartItems = filterCartItems();\n\n    if (addedCartItems.length > 0) {\n      return (\n        <CartItemsListContainer>\n          {rendCartItemsHeader()}\n          {addedCartItems.map((item: restuarantItemsDataTypes) => (\n            <CartItem\n              item={item}\n              key={item.id}\n              onClickIncremenetItemCount={onClickIncremenetItemCount}\n              onClickDecrementItemCount={onClickDecrementItemCount}\n            />\n          ))}\n          {renderCartListFooter(addedCartItems)}\n        </CartItemsListContainer>\n      );\n    } else {\n      return <h1>Empty Cart List</h1>;\n    }\n  };\n\n  return renderCartList();\n};\n\nexport default CartList;\n","import styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nexport const CartContainer = styled.div`\n  ${tw`h-screen`}\n`;\n","import Footer from \"../../../common/components/Footer\";\nimport Header from \"../../../common/components/Header\";\nimport CartList from \"../CartList\";\nimport { CartContainer } from \"./styledComponents\";\n\ninterface restuarantItemsDataTypes {\n  id: string;\n  name: string;\n  cost: number;\n  food_type?: string;\n  foodType?: string;\n  image_url?: string;\n  imageUrl?: string;\n  rating: number;\n  quantity: number;\n}\n\ninterface cartItemsDataTypes {\n  cartItemsData: Array<restuarantItemsDataTypes>;\n  onClickDecrementItemCount: (id: string) => void;\n  onClickIncremenetItemCount: (id: string) => void;\n}\n\nconst Cart = (props: cartItemsDataTypes) => {\n  const {\n    cartItemsData,\n    onClickDecrementItemCount,\n    onClickIncremenetItemCount,\n  } = props;\n\n  return (\n    <CartContainer>\n      <Header />\n      <CartList\n        cartItemsData={cartItemsData}\n        onClickDecrementItemCount={onClickDecrementItemCount}\n        onClickIncremenetItemCount={onClickIncremenetItemCount}\n      />\n      <Footer />\n    </CartContainer>\n  );\n};\n\nexport default Cart;\n","\n\nexport const getResturantSpecificData = () => localStorage.getItem(\"resturantSpecificData\");","import { Component } from \"react\";\nimport Cart from \"../../components/Cart\";\nimport { getResturantSpecificData } from \"../../utils/StorageUtilis\";\n\ninterface restuarantItemsDataTypes {\n  id: string;\n  name: string;\n  cost: number;\n  food_type?: string;\n  foodType?: string;\n  image_url?: string;\n  imageUrl?: string;\n  rating: number;\n  quantity: number;\n}\n\ninterface cartItemsDataTypes {\n  itemsData: Array<restuarantItemsDataTypes>;\n}\n\nclass CartRoute extends Component<cartItemsDataTypes> {\n  state = {\n    cartItemsData: [\n      {\n        id: \"\",\n        name: \"\",\n        cost: 0,\n        foodType: \"\",\n        imageUrl: \"\",\n        rating: 0,\n        quantity: 0,\n      },\n    ],\n  };\n\n  componentDidMount() {\n    this.getCartItemsDataFromLocalStorage();\n  }\n\n  getCartItemsDataFromLocalStorage = () => {\n    const resturantSpecificData = getResturantSpecificData()\n    if (resturantSpecificData) {\n      const parsedResturantData = JSON.parse(resturantSpecificData);\n      const { itemsData } = parsedResturantData;\n      this.setState({ cartItemsData: itemsData });\n    }\n  };\n\n  onClickDecrementFoodItemQuantity = async (id: string) => {\n    const { cartItemsData } = this.state;\n    const decrementItemsDataQuantity = cartItemsData.map((item) => {\n      if (item.id === id && item.quantity > 0) {\n        item.quantity -= 1;\n      }\n      return item;\n    });\n\n    const dataFromLocalStorage = getResturantSpecificData()\n\n    if (dataFromLocalStorage !== null) {\n      const itemsDataFromLocalStorage = JSON.parse(dataFromLocalStorage)\n        .itemsData;\n      const findSelectedItemInItemsDataFromLocalStorage = itemsDataFromLocalStorage.find(\n        (item: restuarantItemsDataTypes) => item.id === id\n      );\n\n      if (\n        findSelectedItemInItemsDataFromLocalStorage !== undefined &&\n        findSelectedItemInItemsDataFromLocalStorage.quantity > 0\n      ) {\n        const decrementQuanityInItemsDataInLocalStorage = itemsDataFromLocalStorage.map(\n          (item: restuarantItemsDataTypes) => {\n            if (item.id === id && item.quantity > 0) {\n              item.quantity -= 1;\n            }\n            return item;\n          }\n        );\n\n        const filteringOutTheItemsWIthQuantityZero = decrementQuanityInItemsDataInLocalStorage.filter(\n          (item: restuarantItemsDataTypes) => item.quantity > 0\n        );\n\n        const updatedLocalStorageObject = JSON.stringify({\n          itemsData: filteringOutTheItemsWIthQuantityZero,\n        });\n        localStorage.setItem(\n          \"resturantSpecificData\",\n          updatedLocalStorageObject\n        );\n      }\n    }\n\n    this.setState({ itemsData: decrementItemsDataQuantity });\n  };\n\n  onClickIncrementFoodItemQuantity = (id: string) => {\n    const { cartItemsData } = this.state;\n    const incrementedItemsDataQuantity = cartItemsData.map((item) => {\n      if (item.id === id) {\n        item.quantity += 1;\n      }\n      return item;\n    });\n\n    const dataFromLocalStorage = getResturantSpecificData()\n\n    if (dataFromLocalStorage !== null) {\n      const itemsDataFromLocalStorage = JSON.parse(dataFromLocalStorage)\n        .itemsData;\n      const findSelectedItemInItemsDataFromLocalStorage = itemsDataFromLocalStorage.find(\n        (item: restuarantItemsDataTypes) => item.id === id\n      );\n\n      if (findSelectedItemInItemsDataFromLocalStorage !== undefined) {\n        const incrementQuanityInItemsDataInLocalStorage = itemsDataFromLocalStorage.map(\n          (item: restuarantItemsDataTypes) => {\n            if (item.id === id) {\n              item.quantity += 1;\n            }\n            return item;\n          }\n        );\n        const updatedLocalStorageObject = JSON.stringify({\n          itemsData: incrementQuanityInItemsDataInLocalStorage,\n        });\n        localStorage.setItem(\n          \"resturantSpecificData\",\n          updatedLocalStorageObject\n        );\n      } else {\n        const findSelectedItemInItemsDataFromState = cartItemsData.find(\n          (item: restuarantItemsDataTypes) => item.id === id\n        );\n        const updatedItemsData = [\n          ...itemsDataFromLocalStorage,\n          findSelectedItemInItemsDataFromState,\n        ];\n        const updatedLocalStorageObject = JSON.stringify({\n          itemsData: updatedItemsData,\n        });\n        localStorage.setItem(\n          \"resturantSpecificData\",\n          updatedLocalStorageObject\n        );\n      }\n    } else {\n      const addedItem = cartItemsData.find(\n        (item: restuarantItemsDataTypes) => item.id === id\n      );\n      const updatedAddItemArray = [addedItem];\n      const updatedLocalStorageObject = JSON.stringify({\n        itemsData: updatedAddItemArray,\n      });\n      localStorage.setItem(\"resturantSpecificData\", updatedLocalStorageObject);\n    }\n\n    this.setState({ itemsData: incrementedItemsDataQuantity });\n  };\n\n  render() {\n    const { cartItemsData } = this.state;\n\n    return (\n      <Cart\n        cartItemsData={cartItemsData}\n        onClickDecrementItemCount={this.onClickDecrementFoodItemQuantity}\n        onClickIncremenetItemCount={this.onClickIncrementFoodItemQuantity}\n      />\n    );\n  }\n}\n\nexport default CartRoute;\n","import styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\nexport const PlaceOrderContainer = styled.div`\n  ${tw`flex flex-col items-center justify-center h-3/5`}\n`;\n\nexport const PlaceOrderHeading = styled.h1`\n  ${tw``}\n`;\n\nexport const PlaceOrderDescription = styled.p`\n  ${tw``}\n`;\n","import { Link } from \"react-router-dom\";\nimport {\n  PlaceOrderContainer,\n  PlaceOrderDescription,\n  PlaceOrderHeading,\n} from \"./styledComponents\";\n\nconst placeOrderStrings = {\n  main: \"Payment Successful\",\n  descriptionOne: \"Thank you for ordering\",\n  descriptionTwo: \"Your payment is successfully completed\",\n  goToHomePageString: \"Go To Home Page\",\n};\n\nconst PlaceOrder = () => (\n  <PlaceOrderContainer>\n    <PlaceOrderHeading>{placeOrderStrings.main}</PlaceOrderHeading>\n    <PlaceOrderDescription>\n      {placeOrderStrings.descriptionOne}\n    </PlaceOrderDescription>\n    <PlaceOrderDescription>\n      {placeOrderStrings.descriptionTwo}\n    </PlaceOrderDescription>\n  </PlaceOrderContainer>\n);\n\nexport default PlaceOrder;\n","import Footer from \"../../../common/components/Footer\";\nimport Header from \"../../../common/components/Header\";\nimport PlaceOrder from \"../../components/PlaceOrder\";\n\nconst OrderPlacedRoute = () => (\n  <>\n    <Header />\n    <PlaceOrder />\n    <Footer />\n  </>\n);\n\nexport default OrderPlacedRoute;\n","import styled from \"styled-components\";\n\nimport tw from \"twin.macro\";\n\nconst colors = {\n  profileNameColor: \"#f7931e\",\n};\n\nexport const ProfileContainer = styled.div`\n  ${tw`flex flex-col h-screen `}\n`;\n\nexport const ProfileInsideContainer = styled.div`\n  ${tw`flex flex-col h-5/6 items-center justify-center`}\n`;\n\nexport const ProfileWelcomeText = styled.h1`\n  ${tw`italic`}\n`;\n\nexport const ProfileName = styled.span`\n  ${tw``}\n  color: ${colors.profileNameColor}\n`;\n","import { FaRegUserCircle } from \"react-icons/fa\";\nimport Footer from \"../../../common/components/Footer\";\nimport Header from \"../../../common/components/Header\";\nimport {\n  ProfileContainer,\n  ProfileInsideContainer,\n  ProfileName,\n  ProfileWelcomeText,\n} from \"./styledComponents\";\n\nconst profileStrings = {\n  iconSize: 150,\n  welcomeText: \"Hello, \",\n  profileName: \"Rahul\",\n};\n\nconst Profile = () => {\n  const myProfile = () => (\n    <ProfileInsideContainer>\n      <FaRegUserCircle size={profileStrings.iconSize} />\n      <ProfileWelcomeText>\n        {profileStrings.welcomeText}{\" \"}\n        <ProfileName>{profileStrings.profileName}</ProfileName>\n      </ProfileWelcomeText>\n    </ProfileInsideContainer>\n  );\n\n  return (\n    <ProfileContainer>\n      <Header />\n      {myProfile()}\n      <Footer />\n    </ProfileContainer>\n  );\n};\n\nexport default Profile;\n","import Profile from \"../../components/Profile\";\n\nconst ProfileRoute = () => <Profile />;\n\nexport default ProfileRoute;\n","import ProtectedRoute from \"../../utils/ProtectedRoute\";\n\nimport HomeRoute from \"../../User/routes/HomeRoute\";\nimport RestuarantDetailsRoute from \"../../User/routes/RestuarantDetailsRoute\";\nimport CartRoute from \"../../User/routes/CartRoute\";\nimport OrderPlacedRoute from \"../../User/routes/OrderPlacedRoute\";\nimport ProfileRoute from \"../../User/routes/ProfileRoute\";\nimport {\n  CART_PATH,\n  ORDER_PLACED,\n  PROFILE_PATH,\n  RESTAURANT_DETAILS,\n  USER_HOME_PATH,\n} from \"../constants/routePathConstants\";\n\nconst routes = [\n  <ProtectedRoute\n    key={USER_HOME_PATH}\n    exact\n    path={USER_HOME_PATH}\n    component={HomeRoute}\n  />,\n\n  <ProtectedRoute\n    key={RESTAURANT_DETAILS}\n    exact\n    path={`${RESTAURANT_DETAILS}:id`}\n    component={RestuarantDetailsRoute}\n  />,\n\n  <ProtectedRoute\n    key={CART_PATH}\n    exact\n    path={CART_PATH}\n    component={CartRoute}\n  />,\n\n  <ProtectedRoute\n    key={ORDER_PLACED}\n    exact\n    path={ORDER_PLACED}\n    component={OrderPlacedRoute}\n  />,\n\n  <ProtectedRoute\n    key={PROFILE_PATH}\n    exact\n    path={PROFILE_PATH}\n    component={ProfileRoute}\n  />,\n];\n\nexport default routes;\n","export const apiMethods = {\n  post: \"POST\",\n  get: \"GET\",\n  delete: \"DELETE\",\n  put: \"PUT\",\n};\n\nconst INVALID_URL_TOKEN = \"INVALID_URL_TOKEN\";\nconst INVALID_TOKEN = \"INVALID_TOKEN\";\nconst INVALID_USER = \"INVALID_USER\";\nconst NOT_AUTHORIZED_EXCEPTION = \"NotAuthorizedException\";\nconst USER_NOT_FOUND_EXCEPTION = \"UserNotFoundException\";\nconst INVALID_SESSION_TOKEN = \"INVALID_SESSION_TOKEN\";\nconst REQUEST_TIMED_OUT = \"Endpoint request timed out\";\nconst INTERNAL_SERVER_ERROR_CODE = 500;\nconst NO_INTERNET_ERROR_CODE = 503;\nconst BAD_REQUEST_ERROR_CODE = 400;\nconst UNAUTHORIZED_ERROR_CODE = 401;\nconst ACCESS_FORBIDDEN_ERROR_CODE = 403;\nconst NOT_FOUND_ERROR_CODE = 404;\n\nexport const resStatuses = {\n  invalidURLToken: INVALID_URL_TOKEN,\n  invalidToken: INVALID_TOKEN,\n  invalidUser: INVALID_USER,\n  notAuthorizedException: NOT_AUTHORIZED_EXCEPTION,\n  userNotFoundException: USER_NOT_FOUND_EXCEPTION,\n  invalidSessionToken: INVALID_SESSION_TOKEN,\n  requestTimedOut: REQUEST_TIMED_OUT,\n};\n\nexport const statusCodes = {\n  internalServerErrorCode: INTERNAL_SERVER_ERROR_CODE,\n  noInternetErrorCode: NO_INTERNET_ERROR_CODE,\n  badRequestErrorCode: BAD_REQUEST_ERROR_CODE,\n  unAuthorizedErrorCode: UNAUTHORIZED_ERROR_CODE,\n  accessForbiddenErrorCode: ACCESS_FORBIDDEN_ERROR_CODE,\n  notFoundErrorCode: NOT_FOUND_ERROR_CODE,\n};\n\nexport const apiErrorProblems = {\n  networkError: \"NETWORK_ERROR\",\n  timeoutError: \"TIMEOUT_ERROR\",\n};\n\nexport const apiStatusConstants = {\n  initial: \"INITIAL\",\n  success: \"SUCCESS\",\n  failure: \"FAILURE\",\n  inProgress: \"IN_PROGRESS\",\n};\n","const envVariables = process.env;\n\nconst config: any = {};\n\nObject.keys(envVariables).forEach((variable) => {\n  if (variable.includes(\"REACT_APP\")) {\n    console.log(\"React App\");\n\n    const envKey = variable.replace(\"REACT_APP_\", \"\");\n    config[envKey] = envVariables[variable];\n  }\n});\n\nexport default config;\n","import {\n  apiErrorProblems,\n  apiMethods,\n  resStatuses,\n  statusCodes,\n} from \"../../common/constants/ApiConstants\";\n\nimport { getAccessToken } from \"../StorageUtilis\";\n\nexport const networkCallWithApisauce = async (url, requestObject, type) => {\n  let response = null;\n  const accessToken = getAccessToken();\n\n  if (accessToken) {\n    const options = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n      method: apiMethods.get,\n    };\n    response = await fetch(url, options);\n    return response;\n  } else {\n    const options = {\n      method: type,\n      body: requestObject,\n    };\n    response = await fetch(url, options);\n    const responseJson = await response.json();\n    return responseJson;\n  }\n};\n\nexport const getUserDisplayableErrorMessage = (error) => {\n  const formattedError = getFormattedError(error);\n  return formattedError.description;\n};\n\nexport function isNetworkError(error) {\n  const apiError = JSON.parse(error);\n  const { networkError, timeoutError } = apiErrorProblems;\n  return apiError.problem === networkError || apiError.problem === timeoutError\n    ? true\n    : false;\n}\n\nexport const getFormattedError = (apiError) => {\n  //TODO: Need to use strings from i18n\n  const errorViewTitle = \"Oops! Something Went Wrong\";\n  const errorViewDescription =\n    \"We're having some trouble completing your request. Please try again.\";\n  const connectionLost = \"Connection lost\";\n  const internetConnection = \"Please check your internet connection\";\n\n  let description = \"\";\n  let errorConstant = \"\";\n  let title = errorViewTitle;\n  let errorCode = statusCodes.internalServerErrorCode;\n  if (apiError !== null && apiError !== undefined) {\n    try {\n      const parsedMessage = JSON.parse(apiError);\n      let parsedError;\n\n      if (parsedMessage.data === undefined || parsedMessage.data === null) {\n        // To handle case when we are directly returning backend error message\n        parsedError = parsedMessage;\n      } else {\n        // To handle case when we are adding all the requests to backend error message\n        parsedError = parsedMessage.data;\n      }\n\n      if (parsedError !== undefined && parsedError !== null) {\n        if (\n          parsedError.message &&\n          parsedError.message === resStatuses.requestTimedOut\n        ) {\n          title = errorViewTitle;\n          description = errorViewDescription;\n        }\n\n        if (parsedError.response) {\n          try {\n            const response = JSON.parse(parsedError.response);\n            const {\n              title: errorTitle,\n              description: errorDescription,\n            } = response;\n            if (errorTitle) {\n              title = errorTitle;\n            }\n            if (errorDescription) {\n              description = errorDescription;\n            } else {\n              description = parsedError.response;\n            }\n          } catch (e) {\n            description = parsedError.response;\n          }\n          errorConstant = parsedError.res_status;\n        }\n        if (parsedError.http_status_code) {\n          errorCode = parsedError.http_status_code;\n          errorConstant = parsedError.res_status;\n          if (\n            parsedError.http_status_code === statusCodes.noInternetErrorCode\n          ) {\n            title = connectionLost;\n            description = internetConnection;\n          }\n        }\n      }\n      if (isNetworkError(JSON.stringify(parsedError))) {\n        title = connectionLost;\n        description = internetConnection;\n      }\n    } catch (e) {\n      // console.log('err >><<<', e)\n    }\n  }\n\n  if (description === null || description === \"\") {\n    title = errorViewTitle;\n    description = errorViewDescription;\n  }\n  const apiErrorResponse = {\n    errorCode,\n    title,\n    description,\n    errorConstant,\n  };\n  return apiErrorResponse;\n};\n\n// import {\n//   apiMethods,\n//   resStatuses,\n//   statusCodes,\n// } from \"../../common/constants/apiConstants\";\n// import { getAccessToken } from \"../StorageUtilis\";\n\n// export const networkCallWithApisauce = async (\n//   api,\n//   requestObject,\n//   type = apiMethods.post\n// ) => {\n//   let response = null;\n\n//   const options = {\n//     method: type,\n//     body: JSON.stringify(requestObject),\n//   };\n\n//   const fetchResponse = await fetch(api, options);\n//   return fetchResponse;\n// };\n\n// export const networkCallWithGetDataApisauce = async (\n\n//   api,\n//   type = apiMethods.get\n// ) => {\n//   let response = null\n\n//   console.log(getAccessToken(), \"access token\")\n\n//   const options = {\n//     headers: {\n//       Authorization: `Bearer ${getAccessToken()}`,\n//     },\n//     method: type\n//   }\n//   response = await fetch(api, options);\n//   return response\n// }\n\n// // export const getUserDisplayableErrorMessage = error => {\n// //     const formattedError = getFormattedError(error)\n// //     return formattedError.description\n// // }\n\n// // export function isNetworkError(error) {\n// //     const apiError = JSON.parse(error)\n// //     const { networkError, timeoutError } = apiErrorProblems\n// //     return apiError.problem === networkError || apiError.problem === timeoutError\n// //         ? true\n// //         : false\n// // }\n\n// // export const getFormattedError = apiError => {\n// //     //TODO: Need to use strings from i18n\n// //     const errorViewTitle = 'Oops! Something Went Wrong'\n// //     const errorViewDescription =\n// //         \"We're having some trouble completing your request. Please try again.\"\n// //     const connectionLost = 'Connection lost'\n// //     const internetConnection = 'Please check your internet connection'\n\n// //     let description = ''\n// //     let errorConstant = ''\n// //     let title = errorViewTitle\n// //     let errorCode = statusCodes.internalServerErrorCode\n// //     if (apiError !== null && apiError !== undefined) {\n// //         try {\n// //             const parsedMessage = JSON.parse(apiError)\n// //             let parsedError\n\n// //             if (parsedMessage.data === undefined || parsedMessage.data === null) {\n// //                 // To handle case when we are directly returning backend error message\n// //                 parsedError = parsedMessage\n// //             } else {\n// //                 // To handle case when we are adding all the requests to backend error message\n// //                 parsedError = parsedMessage.data\n// //             }\n\n// //             if (parsedError !== undefined && parsedError !== null) {\n// //                 if (\n// //                     parsedError.message &&\n// //                     parsedError.message === resStatuses.requestTimedOut\n// //                 ) {\n// //                     title = errorViewTitle\n// //                     description = errorViewDescription\n// //                 }\n\n// //                 if (parsedError.response) {\n// //                     try {\n// //                         const response = JSON.parse(parsedError.response)\n// //                         const {\n// //                             title: errorTitle,\n// //                             description: errorDescription\n// //                         } = response\n// //                         if (errorTitle) {\n// //                             title = errorTitle\n// //                         }\n// //                         if (errorDescription) {\n// //                             description = errorDescription\n// //                         } else {\n// //                             description = parsedError.response\n// //                         }\n// //                     } catch (e) {\n// //                         description = parsedError.response\n// //                     }\n// //                     errorConstant = parsedError.res_status\n// //                 }\n// //                 if (parsedError.http_status_code) {\n// //                     errorCode = parsedError.http_status_code\n// //                     errorConstant = parsedError.res_status\n// //                     if (\n// //                         parsedError.http_status_code ===\n// //                         statusCodes.noInternetErrorCode\n// //                     ) {\n// //                         title = connectionLost\n// //                         description = internetConnection\n// //                     }\n// //                 }\n// //             }\n// //             if (isNetworkError(JSON.stringify(parsedError))) {\n// //                 title = connectionLost\n// //                 description = internetConnection\n// //             }\n// //         } catch (e) {\n// //             // console.log('err >><<<', e)\n// //         }\n// //     }\n\n// //     if (description === null || description === '') {\n// //         title = errorViewTitle\n// //         description = errorViewDescription\n// //     }\n// //     const apiErrorResponse = {\n// //         errorCode,\n// //         title,\n// //         description,\n// //         errorConstant\n// //     }\n// //     return apiErrorResponse\n// // }\n","import { create } from \"apisauce\";\nimport { apiMethods } from \"../../../common/constants/ApiConstants\";\nimport config from \"../../../common/constants/envinornmentConstants\";\nimport { networkCallWithApisauce } from \"../../../utils/apiUtils\";\n\nconst url = \"https://apis.ccbp.in/login\";\n\nclass AuthAPIService {\n  api: Record<string, any>;\n\n  constructor() {\n    this.api = create({\n      baseURL: config.BASE_URL,\n    });\n\n    console.log(this.api.getBaseURL);\n  }\n\n  logIn(stringifiedLoginObject: string) {\n    return networkCallWithApisauce(\n      url,\n      stringifiedLoginObject,\n      apiMethods.post\n    );\n  }\n}\n\nexport default AuthAPIService;\n","import { action, observable } from \"mobx\";\nimport { bindPromiseWithOnSuccess } from \"@ib/mobx-promise\";\nimport { API_FAILED, API_INITIAL } from \"@ib/api-constants\";\nimport AuthAPIService from \"../services/authApiService\";\nimport { getUserDisplayableErrorMessage } from \"../../../utils/apiUtils\";\nimport { ACCESS_TOKEN, setAccessToken } from \"../../../utils/StorageUtilis\";\nimport { response } from \"msw\";\nimport { statusCodes } from \"../../../common/constants/ApiConstants\";\n\nclass AuthStore {\n  @observable userLoginApiStatus: number;\n  @observable userLoginApiError: Error | string;\n  @observable isAdmin: boolean;\n  authService: AuthAPIService;\n\n  constructor(authService: any) {\n    this.authService = authService;\n    this.userLoginApiError = \"\";\n    this.userLoginApiStatus = API_INITIAL;\n    this.isAdmin = false;\n    this.init();\n  }\n\n  @action.bound init() {\n    this.userLoginApiStatus = API_INITIAL;\n  }\n\n  @action.bound userLogin = async (loginObject: {\n    username: string;\n    password: string;\n  }) => {\n    const stringifiedLoginObject = JSON.stringify(loginObject);\n\n    const userLoginPromise = await this.authService.logIn(\n      stringifiedLoginObject\n    );\n\n    try {\n      const statusCode = userLoginPromise.status_code;\n      if (statusCode === statusCodes.badRequestErrorCode) {\n        this.setUserLoginApiError(userLoginPromise);\n      } else {\n        this.setUserLoginApiResponse(userLoginPromise);\n      }\n    } catch {\n      console.log(\"error\");\n    }\n  };\n\n  @action.bound setUserLoginApiStatus(status: number) {\n    this.userLoginApiStatus = status;\n    console.log(this.userLoginApiStatus, \"status\");\n  }\n\n  @action.bound setUserLoginApiResponse = async (response: any) => {\n    if (response[ACCESS_TOKEN] !== undefined) {\n      this.userLoginApiError = \"\";\n      setAccessToken(response[ACCESS_TOKEN]);\n      this.isAdmin = response.is_user;\n    }\n  };\n\n  @action.bound setUserLoginApiError(error: any) {\n    this.userLoginApiStatus = statusCodes.badRequestErrorCode;\n    this.userLoginApiError = error.error_msg;\n  }\n\n  @action.bound clearStore() {\n    this.init();\n  }\n}\n\nexport default AuthStore;\n","import { apiMethods } from \"../../../common/constants/ApiConstants\";\nimport { networkCallWithApisauce } from \"../../../utils/apiUtils\";\n\nconst url = \"https://apis.ccbp.in/restaurants-list/offers\";\n\nclass CarouselApiService {\n  api: string;\n  constructor() {\n    this.api = url;\n  }\n\n  getCarousel() {\n    return networkCallWithApisauce(url, apiMethods.get);\n  }\n}\n\nexport default CarouselApiService;\n","import { apiMethods } from \"../../../common/constants/ApiConstants\";\nimport { networkCallWithApisauce } from \"../../../utils/apiUtils\";\n\nclass RestaurantDetailsService {\n  getRestaurantDetails(url: string) {\n    return networkCallWithApisauce(url, apiMethods.get);\n  }\n}\n\nexport default RestaurantDetailsService;\n","import { apiMethods } from \"../../../common/constants/ApiConstants\";\nimport { networkCallWithApisauce } from \"../../../utils/apiUtils\";\n\nclass RestaurantsService {\n  getRestaurants(url: string) {\n    return networkCallWithApisauce(url, apiMethods.get);\n  }\n}\n\nexport default RestaurantsService;\n","import { carouselDataObjectType } from \"../types\";\n\nclass CarouselModel {\n  id;\n  imageUrl;\n  constructor(carouselDataObject: carouselDataObjectType) {\n    this.id = carouselDataObject.id;\n    this.imageUrl = carouselDataObject.image_url;\n  }\n}\n\nexport { CarouselModel };\n","import {\n  API_FAILED,\n  API_FETCHING,\n  API_INITIAL,\n  API_SUCCESS,\n} from \"@ib/api-constants\";\nimport { action, observable } from \"mobx\";\nimport { statusCodes } from \"../../../common/constants/ApiConstants\";\nimport CarouselApiService from \"../../services/carouselService/CarouselApiService\";\nimport { carouselDataObjectType } from \"../types\";\nimport { CarouselModel } from \"./carouselModel\";\n\nclass CarouselStore {\n  @observable carouselData: Array<CarouselModel>;\n  @observable carouselApiStatus: number;\n  carouselService: CarouselApiService;\n\n  constructor(carouselService: any) {\n    this.carouselService = carouselService;\n    this.carouselApiStatus = API_INITIAL;\n    this.carouselData = [];\n    this.init();\n  }\n\n  @action.bound init() {\n    this.carouselData = [];\n  }\n\n  @action.bound getCarouselData = async () => {\n    this.carouselApiStatus = API_FETCHING;\n\n    const userCarouselPromise = this.carouselService.getCarousel();\n\n    const fetchResponse = await userCarouselPromise.then((response: any) => {\n      return response.json();\n    });\n\n    if (fetchResponse.status_code === statusCodes.badRequestErrorCode) {\n      this.setCarouselApiError();\n    } else {\n      this.setCarouselApiResponse(fetchResponse);\n    }\n  };\n\n  @action.bound setCarouselApiError() {\n    this.carouselApiStatus = API_FAILED;\n  }\n\n  @action.bound setCarouselApiResponse(response: {\n    offers: Array<carouselDataObjectType>;\n  }) {\n    this.carouselApiStatus = API_SUCCESS;\n    this.carouselData = response.offers.map(\n      (carouselItem) => new CarouselModel(carouselItem)\n    );\n  }\n}\n\nexport { CarouselStore };\n","import { action, observable } from \"mobx\";\n\nconst homeRouteTextStrings = {\n  sortByHigh: \"Highest\",\n  sortByLow: \"Low\",\n  limit: 9,\n  paginationPageCount: 1,\n  totalRestuarants: 0,\n};\n\nclass HomeStore {\n  @observable sortBy: string;\n  @observable paginationPageCount: number;\n  totalRestuarants: number;\n\n  constructor() {\n    this.sortBy = homeRouteTextStrings.sortByHigh;\n    this.paginationPageCount = homeRouteTextStrings.paginationPageCount;\n    this.totalRestuarants = 0;\n  }\n\n  @action.bound onChangeSortBy(value: string) {\n    this.sortBy = value;\n  }\n\n  @action.bound incrementPaginationCount(totalRestuarants: number) {\n    const { paginationPageCount } = this;\n\n    if (paginationPageCount < totalRestuarants / homeRouteTextStrings.limit) {\n      this.paginationPageCount += 1;\n    }\n\n    console.log(this.paginationPageCount);\n  }\n\n  @action.bound decrementPaginationCount() {\n    const { paginationPageCount } = this;\n    if (paginationPageCount > homeRouteTextStrings.paginationPageCount) {\n      this.paginationPageCount -= 1;\n    }\n  }\n}\n\nexport default HomeStore;\n","import { foodItemObjectTypes } from \"../types\";\n\nclass FoodItemModel {\n    id\n    cost\n    foodType\n    imageUrl\n    name\n    rating\n    quantity\n    constructor(item: foodItemObjectTypes) {\n        this.id = item.id\n        this.cost = item.cost\n        this.foodType = item.food_type\n        this.imageUrl = item.image_url\n        this.name = item.name\n        this.rating = item.rating\n        this.quantity = 0\n    }\n}\n\nexport { FoodItemModel };","import { API_FAILED, API_FETCHING, API_INITIAL, API_SUCCESS } from \"@ib/api-constants\";\nimport { action, observable } from \"mobx\";\nimport { statusCodes } from \"../../../common/constants/ApiConstants\";\nimport RestaurantDetailsService from \"../../services/restaurantDetailService/RestaurantDetailService\";\nimport { foodItemObjectTypes, restuarantsDataDetailsObjectType } from \"../types\";\nimport { FoodItemModel } from \"./foodItemModel\";\n\n\nconst restauartDetailsApiURL = \"https://apis.ccbp.in/restaurants-list\";\n\nclass RestaurantDetailsStore {\n  @observable restaurantDetails: restuarantsDataDetailsObjectType;\n  @observable restaurantDetailsApiStatus: number;\n  @observable restaurantFoodItemsList: Array<foodItemObjectTypes>;\n  restaurantDetailsService: RestaurantDetailsService;\n\n  constructor(restaurantDetailsService: RestaurantDetailsService) {\n    this.restaurantDetails = {\n      id: \"\",\n      imageUrl: \"\",\n      restuarantName: \"\",\n      restuarantCusine: \"\",\n      restuarantLocation: \"\",\n      restuarantRating: 0,\n      noOfReviews: 0,\n      costForTwo: 0,\n      itemsCount: 0,\n    };\n    this.restaurantFoodItemsList = []\n    this.restaurantDetailsApiStatus = API_INITIAL;\n    this.restaurantDetailsService = restaurantDetailsService;\n    this.init();\n  }\n\n  @action.bound init() {\n    this.restaurantDetails = {\n      id: \"\",\n      imageUrl: \"\",\n      restuarantName: \"\",\n      restuarantCusine: \"\",\n      restuarantLocation: \"\",\n      restuarantRating: 0,\n      noOfReviews: 0,\n      costForTwo: 0,\n      itemsCount: 0,\n    };\n  }\n\n  @action.bound getRestuarantDetails = async (id: string) => {\n    this.restaurantDetailsApiStatus = API_FETCHING;\n\n    const url = `${restauartDetailsApiURL}/${id}`\n\n    const restaurantsPromise = this.restaurantDetailsService.getRestaurantDetails(url);\n\n    const fetchResponse = await restaurantsPromise.then((response: any) =>\n      response.json()\n    );\n\n    if (fetchResponse.status_code === statusCodes.badRequestErrorCode) {\n      this.setRestaurantDetailsApiError();\n    } else {\n      this.setRestaurantDetailsApiResponse(fetchResponse);\n    }\n  };\n\n\n  @action setRestaurantDetailsApiError = () => {\n    this.restaurantDetailsApiStatus = API_FAILED;\n  }\n\n\n  @action setRestaurantDetailsApiResponse = (response: any) => {\n    this.restaurantDetailsApiStatus = API_SUCCESS\n\n    const caseConvertedResturantDetailsData = {\n      id: response.id,\n      imageUrl: response.image_url,\n      restuarantName: response.name,\n      restuarantCusine: response.cuisine,\n      restuarantLocation: response.location,\n      restuarantRating: response.rating,\n      noOfReviews: response.reviews_count,\n      costForTwo: response.cost_for_two,\n      itemsCount: response.items_count,\n    };\n\n    const dataFromLocalStorage = localStorage.getItem(\n      \"resturantSpecificData\"\n    );\n\n    const caseConvertedFoodItemsData = response.food_items.map((item: foodItemObjectTypes) => new FoodItemModel(item))\n\n    if (dataFromLocalStorage !== null) {\n      const itemsDataFromLocalStorage = JSON.parse(dataFromLocalStorage)\n        .itemsData;\n      const updateFetchedDataQuantity = caseConvertedFoodItemsData.map(\n        (fetchedItem: foodItemObjectTypes) => {\n          itemsDataFromLocalStorage.find(\n            (itemInLocalStorage: foodItemObjectTypes) => {\n              if (itemInLocalStorage.id === fetchedItem.id) {\n                fetchedItem.quantity = itemInLocalStorage.quantity;\n              }\n            }\n          );\n          return fetchedItem;\n        }\n      );\n      this.restaurantDetails = caseConvertedResturantDetailsData\n      this.restaurantFoodItemsList = updateFetchedDataQuantity\n    }\n    else {\n      this.restaurantDetails = caseConvertedResturantDetailsData\n      this.restaurantFoodItemsList = caseConvertedFoodItemsData\n    }\n  }\n}\n\nexport default RestaurantDetailsStore;\n","import { restuarantsDataObjectType } from \"../types\";\n\nclass RestaurantModel {\n  id;\n  name;\n  cuisine;\n  imageUrl;\n  userRating;\n  constructor(restuarantsDataObject: restuarantsDataObjectType) {\n    (this.id = restuarantsDataObject.id),\n      (this.name = restuarantsDataObject.name),\n      (this.cuisine = restuarantsDataObject.cuisine),\n      (this.imageUrl = restuarantsDataObject.image_url),\n      (this.userRating = {\n        totalReviews: restuarantsDataObject.user_rating.total_reviews,\n        rating: restuarantsDataObject.user_rating.rating,\n      });\n  }\n}\n\nexport { RestaurantModel };\n","import {\n  API_FAILED,\n  API_FETCHING,\n  API_INITIAL,\n  API_SUCCESS,\n} from \"@ib/api-constants\";\nimport { action, observable, computed } from \"mobx\";\nimport { statusCodes } from \"../../../common/constants/ApiConstants\";\nimport RestaurantsService from \"../../services/restaurantsService/RestaurantsService\";\nimport { restuarantsDataObjectType } from \"../types\";\nimport { RestaurantModel } from \"./restaurantModel\";\n\nconst getPopularRestauartsApiURL = \"https://apis.ccbp.in/restaurants-list\";\n\nclass RestaurantsStore {\n  @observable restuarantsData: Array<RestaurantModel>;\n  @observable restaurantsApiStatus: number;\n  @observable numberOfRestaurants: number;\n  restaurantsService: RestaurantsService;\n\n  constructor(restaurantsService: RestaurantsService) {\n    this.restuarantsData = [];\n    this.restaurantsApiStatus = API_INITIAL;\n    this.numberOfRestaurants = 0;\n    this.restaurantsService = restaurantsService;\n    this.init();\n  }\n\n  @action.bound init() {\n    this.restuarantsData = [];\n  }\n\n  @action.bound getRestuarants = async (\n    offset: number,\n    limit: number,\n    sortBy: string\n  ) => {\n    this.restaurantsApiStatus = API_FETCHING;\n\n\n    const url = `${getPopularRestauartsApiURL}?offset=${offset}&limit=${limit}&sort_by_rating=${sortBy}`;\n    const restaurantsPromise = this.restaurantsService.getRestaurants(url);\n\n    const fetchResponse = await restaurantsPromise.then((response: any) =>\n      response.json()\n    );\n\n    if (fetchResponse.status_code === statusCodes.badRequestErrorCode) {\n      this.setRestaurantsApiError();\n    } else {\n      this.setRestaurantsApiResponse(fetchResponse);\n    }\n  };\n\n  @action.bound setRestaurantsApiError = () => {\n    this.restaurantsApiStatus = API_FAILED;\n  };\n\n  @action.bound setRestaurantsApiResponse = (response: {\n    restaurants: Array<restuarantsDataObjectType>;\n    total: number;\n  }) => {\n    this.restaurantsApiStatus = API_SUCCESS;\n    this.restuarantsData = response.restaurants.map(\n      (restuarantItem) => new RestaurantModel(restuarantItem)\n    );\n    this.getNumberOfRestaurants(response.total);\n  };\n\n  @action.bound getNumberOfRestaurants(numberOfRestaurants: number) {\n    this.numberOfRestaurants = numberOfRestaurants;\n  }\n}\n\nexport default RestaurantsStore;\n","import AuthAPIService from \"../Authentication/login/services/authApiService\";\nimport AuthStore from \"../Authentication/login/store/authStore\";\nimport CarouselApiService from \"../User/services/carouselService/CarouselApiService\";\nimport RestaurantDetailsService from \"../User/services/restaurantDetailService/RestaurantDetailService\";\nimport RestaurantsService from \"../User/services/restaurantsService/RestaurantsService\";\nimport { CarouselStore } from \"../User/store/carouselStore/carouselStore\";\nimport HomeStore from \"../User/store/homeStore\";\nimport RestaurantDetailsStore from \"../User/store/restaurantDetailsStore/restaurantDetailsStore\";\nimport RestaurantsStore from \"../User/store/restaurantsStore/restaurantsStore\";\n\nconst authService = new AuthAPIService();\nconst authStore = new AuthStore(authService);\n\nconst carouseService = new CarouselApiService();\nconst carouselStore = new CarouselStore(carouseService);\n\nconst homeStore = new HomeStore();\n\nconst restaurantsService = new RestaurantsService();\nconst restaurantsStore = new RestaurantsStore(restaurantsService);\n\nconst restaurantDetailsService = new RestaurantDetailsService();\nconst restaurantDetailsStore = new RestaurantDetailsStore(\n  restaurantDetailsService\n);\n\nexport default {\n  authStore,\n  homeStore,\n  carouselStore,\n  restaurantsStore,\n  restaurantDetailsStore,\n};\n","import { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"mobx-react\";\nimport LoginFormRoute from \"./Authentication/login/routes/LoginPageRoute\";\nimport routes from \"./common/routes/CommounRoutes\";\nimport { LOGIN_PATH } from \"./common/constants/routePathConstants\";\nimport \"./App.css\";\nimport stores from \"./stores\";\n\nconst App = () => (\n  <Provider {...stores}>\n    <Switch>\n      <Route exact path={LOGIN_PATH} component={LoginFormRoute} />\n      {routes}\n    </Switch>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}